Index.PACKAGES = {"com.arkondata" : [], "com.arkondata.slothql" : [], "com.arkondata.slothql.cypher.syntax" : [{"name" : "com.arkondata.slothql.cypher.syntax.**", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$times$times$.html", "members_object" : [{"label" : "unapply", "tail" : "(any: Any): Option[(Int, Int)]", "member" : "com.arkondata.slothql.cypher.syntax.**.unapply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$times$times$.html#unapply(any:Any):Option[(Int,Int)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$times$times$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$times$times$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$times$times$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$times$times$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$times$times$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$times$times$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$times$times$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$times$times$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$times$times$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$times$times$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$times$times$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$times$times$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$times$times$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$times$times$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$times$times$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$times$times$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$times$times$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$times$times$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$times$times$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.arkondata.slothql.cypher.syntax.-", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$minus$.html", "members_object" : [{"label" : "unapply", "tail" : "(l: RNXIO): Option[(RNI, Aux[Outgoing])]", "member" : "com.arkondata.slothql.cypher.syntax.-.unapply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$minus$.html#unapply(l:com.arkondata.slothql.cypher.syntax.package.CypherSyntaxInternal.RNXIO):Option[(com.arkondata.slothql.cypher.syntax.package.CypherSyntaxInternal.RNI,com.arkondata.slothql.cypher.syntax.package.Rel.Aux[com.arkondata.slothql.cypher.syntax.package.Rel.Outgoing])]", "kind" : "def"}, {"label" : "unapply", "tail" : "(l: RNXII): Option[(RNI, Aux[Incoming])]", "member" : "com.arkondata.slothql.cypher.syntax.-.unapply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$minus$.html#unapply(l:com.arkondata.slothql.cypher.syntax.package.CypherSyntaxInternal.RNXII):Option[(com.arkondata.slothql.cypher.syntax.package.CypherSyntaxInternal.RNI,com.arkondata.slothql.cypher.syntax.package.Rel.Aux[com.arkondata.slothql.cypher.syntax.package.Rel.Incoming])]", "kind" : "def"}, {"label" : "unapply", "tail" : "(l: RNO): Option[(Aux[Outgoing], Node)]", "member" : "com.arkondata.slothql.cypher.syntax.-.unapply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$minus$.html#unapply(l:com.arkondata.slothql.cypher.syntax.package.CypherSyntaxInternal.RNO):Option[(com.arkondata.slothql.cypher.syntax.package.Rel.Aux[com.arkondata.slothql.cypher.syntax.package.Rel.Outgoing],com.arkondata.slothql.cypher.syntax.package.Node)]", "kind" : "def"}, {"label" : "unapply", "tail" : "(l: RNI): Option[(Aux[Incoming], Node)]", "member" : "com.arkondata.slothql.cypher.syntax.-.unapply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$minus$.html#unapply(l:com.arkondata.slothql.cypher.syntax.package.CypherSyntaxInternal.RNI):Option[(com.arkondata.slothql.cypher.syntax.package.Rel.Aux[com.arkondata.slothql.cypher.syntax.package.Rel.Incoming],com.arkondata.slothql.cypher.syntax.package.Node)]", "kind" : "def"}, {"label" : "unapply", "tail" : "(r: NRO): Option[(Node, Aux[Outgoing])]", "member" : "com.arkondata.slothql.cypher.syntax.-.unapply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$minus$.html#unapply(r:com.arkondata.slothql.cypher.syntax.package.CypherSyntaxInternal.NRO):Option[(com.arkondata.slothql.cypher.syntax.package.Node,com.arkondata.slothql.cypher.syntax.package.Rel.Aux[com.arkondata.slothql.cypher.syntax.package.Rel.Outgoing])]", "kind" : "def"}, {"label" : "unapply", "tail" : "(r: NRI): Option[(Node, Aux[Incoming])]", "member" : "com.arkondata.slothql.cypher.syntax.-.unapply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$minus$.html#unapply(r:com.arkondata.slothql.cypher.syntax.package.CypherSyntaxInternal.NRI):Option[(com.arkondata.slothql.cypher.syntax.package.Node,com.arkondata.slothql.cypher.syntax.package.Rel.Aux[com.arkondata.slothql.cypher.syntax.package.Rel.Incoming])]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$minus$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$minus$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$minus$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$minus$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$minus$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$minus$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$minus$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$minus$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$minus$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$minus$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$minus$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$minus$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$minus$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$minus$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$minus$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$minus$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$minus$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$minus$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$minus$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.arkondata.slothql.cypher.syntax.::=", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$colon$eq$.html", "members_object" : [{"label" : "unapply", "tail" : "(any: Any): Option[(Path, Node)]", "member" : "com.arkondata.slothql.cypher.syntax.::=.unapply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$colon$eq$.html#unapply(any:Any):Option[(com.arkondata.slothql.cypher.syntax.package.Path,com.arkondata.slothql.cypher.syntax.package.Node)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$colon$eq$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$colon$eq$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$colon$eq$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$colon$eq$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$colon$eq$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$colon$eq$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$colon$eq$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$colon$eq$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$colon$eq$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$colon$eq$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$colon$eq$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$colon$eq$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$colon$eq$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$colon$eq$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$colon$eq$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$colon$eq$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$colon$eq$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$colon$eq$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$colon$eq$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.arkondata.slothql.cypher.syntax.:=", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$eq$.html", "members_object" : [{"label" : "unapply", "tail" : "(any: Any): Option[(String, Any)]", "member" : "com.arkondata.slothql.cypher.syntax.:=.unapply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$eq$.html#unapply(any:Any):Option[(String,Any)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$eq$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$eq$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$eq$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$eq$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$eq$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$eq$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$eq$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$eq$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$eq$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$eq$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$eq$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$eq$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$eq$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$eq$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$eq$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$eq$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$eq$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$eq$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$colon$eq$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.arkondata.slothql.cypher.syntax.<", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$less$.html", "members_object" : [{"label" : "unapply", "tail" : "(n: NRO): Option[(Node, RNXIO)]", "member" : "com.arkondata.slothql.cypher.syntax.<.unapply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$less$.html#unapply(n:com.arkondata.slothql.cypher.syntax.package.CypherSyntaxInternal.NRO):Option[(com.arkondata.slothql.cypher.syntax.package.Node,com.arkondata.slothql.cypher.syntax.package.CypherSyntaxInternal.RNXIO)]", "kind" : "def"}, {"label" : "unapply", "tail" : "(n: NRI): Option[(Node, RNXII)]", "member" : "com.arkondata.slothql.cypher.syntax.<.unapply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$less$.html#unapply(n:com.arkondata.slothql.cypher.syntax.package.CypherSyntaxInternal.NRI):Option[(com.arkondata.slothql.cypher.syntax.package.Node,com.arkondata.slothql.cypher.syntax.package.CypherSyntaxInternal.RNXII)]", "kind" : "def"}, {"label" : "unapply", "tail" : "(n: Node): Option[(Node, RNI)]", "member" : "com.arkondata.slothql.cypher.syntax.<.unapply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$less$.html#unapply(n:com.arkondata.slothql.cypher.syntax.package.Node):Option[(com.arkondata.slothql.cypher.syntax.package.Node,com.arkondata.slothql.cypher.syntax.package.CypherSyntaxInternal.RNI)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$less$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$less$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$less$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$less$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$less$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$less$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$less$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$less$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$less$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$less$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$less$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$less$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$less$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$less$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$less$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$less$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$less$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$less$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$less$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.arkondata.slothql.cypher.syntax.>", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$greater$.html", "members_object" : [{"label" : "unapply", "tail" : "(n: NRO): Option[(NRO, NRO)]", "member" : "com.arkondata.slothql.cypher.syntax.>.unapply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$greater$.html#unapply(n:com.arkondata.slothql.cypher.syntax.package.CypherSyntaxInternal.NRO):Option[(com.arkondata.slothql.cypher.syntax.package.CypherSyntaxInternal.NRO,com.arkondata.slothql.cypher.syntax.package.CypherSyntaxInternal.NRO)]", "kind" : "def"}, {"label" : "unapply", "tail" : "(n: NRI): Option[(NRO, NRI)]", "member" : "com.arkondata.slothql.cypher.syntax.>.unapply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$greater$.html#unapply(n:com.arkondata.slothql.cypher.syntax.package.CypherSyntaxInternal.NRI):Option[(com.arkondata.slothql.cypher.syntax.package.CypherSyntaxInternal.NRO,com.arkondata.slothql.cypher.syntax.package.CypherSyntaxInternal.NRI)]", "kind" : "def"}, {"label" : "unapply", "tail" : "(n: Node): Option[(NRO, Node)]", "member" : "com.arkondata.slothql.cypher.syntax.>.unapply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$greater$.html#unapply(n:com.arkondata.slothql.cypher.syntax.package.Node):Option[(com.arkondata.slothql.cypher.syntax.package.CypherSyntaxInternal.NRO,com.arkondata.slothql.cypher.syntax.package.Node)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$greater$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$greater$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$greater$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$greater$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$greater$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$greater$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$greater$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$greater$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$greater$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$greater$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$greater$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$greater$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$greater$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$greater$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$greater$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$greater$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$greater$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$greater$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$$greater$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.arkondata.slothql.cypher.syntax.Call", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Call$.html", "members_object" : [{"label" : "CallOps", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.Call.CallOps", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Call$.html#CallOpsextendsAnyRef", "kind" : "class"}, {"label" : "apply", "tail" : "(procedure: String, params: CypherFragment.Expr[_]*): CallOps", "member" : "com.arkondata.slothql.cypher.syntax.Call.apply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Call$.html#apply(procedure:String,params:com.arkondata.slothql.cypher.CypherFragment.Expr[_]*):com.arkondata.slothql.cypher.syntax.Call.CallOps", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Call$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Call$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Call$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Call$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Call$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Call$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Call$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Call$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Call$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Call$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Call$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Call$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Call$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Call$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Call$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Call$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Call$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Call$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Call$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.arkondata.slothql.cypher.syntax.Create", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Create$.html", "members_object" : [{"label" : "apply", "tail" : "(query: (Node) => Query[R]): Query[R]", "member" : "com.arkondata.slothql.cypher.syntax.Create.apply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Create$.html#apply[R](query:com.arkondata.slothql.cypher.syntax.package.Node=>com.arkondata.slothql.cypher.syntax.package.Query[R]):com.arkondata.slothql.cypher.syntax.package.Query[R]", "kind" : "macro def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Create$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Create$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Create$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Create$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Create$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Create$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Create$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Create$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Create$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Create$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Create$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Create$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Create$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Create$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Create$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Create$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Create$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Create$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Create$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxAsString", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsString$.html", "members_object" : [{"label" : "canNumeric", "tail" : "(arg0: Numeric[N]): Can[N]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxAsString.canNumeric", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsString$.html#canNumeric[N](implicitevidence$4:Numeric[N]):com.arkondata.slothql.cypher.syntax.CypherSyntaxAsString.Can[N]", "kind" : "implicit def"}, {"label" : "canBoolean", "tail" : ": Can[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxAsString.canBoolean", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsString$.html#canBoolean:com.arkondata.slothql.cypher.syntax.CypherSyntaxAsString.Can[Boolean]", "kind" : "implicit lazy val"}, {"label" : "canString", "tail" : ": Can[String]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxAsString.canString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsString$.html#canString:com.arkondata.slothql.cypher.syntax.CypherSyntaxAsString.Can[String]", "kind" : "implicit lazy val"}, {"label" : "Can", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxAsString.Can", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsString$.html#Can[A]extendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsString$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsString$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsString$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsString$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsString$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsString$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsString$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsString$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsString$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsString$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsString$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsString$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsString$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsString$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsString$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsString$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsString$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsString$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsString$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxAsStringOps", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxAsStringOps[A]) => Boolean, msg: => Any): CypherSyntaxAsStringOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxAsStringOps[A]) => Boolean): CypherSyntaxAsStringOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): CypherSyntaxAsStringOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CypherSyntaxAsStringOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CypherSyntaxAsStringOps[A], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CypherSyntaxAsStringOps[A], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "asString", "tail" : "(): CypherFragment.Expr[String]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxAsStringOps.asString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html#asString:com.arkondata.slothql.cypher.CypherFragment.Expr[String]", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxAsStringOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxAsStringOps.html", "kind" : "class"}, {"name" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxCallMacros", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxCallMacros) => Boolean, msg: => Any): CypherSyntaxCallMacros", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxCallMacros) => Boolean): CypherSyntaxCallMacros", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): CypherSyntaxCallMacros", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CypherSyntaxCallMacros", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CypherSyntaxCallMacros, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CypherSyntaxCallMacros, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "Pattern", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.Pattern", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#Pattern", "kind" : "object"}, {"label" : "PatternPlus", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.PatternPlus", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#PatternPlus", "kind" : "object"}, {"label" : "BodyTransformer", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.BodyTransformer", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#BodyTransformerextendsCypherSyntaxPatternMacros.this.c.universe.Transformer", "kind" : "class"}, {"label" : "yieldImpl", "tail" : "(func: scala.reflect.macros.Universe.Tree, yieldsT: (scala.reflect.macros.Universe.Tree, scala.reflect.macros.Universe.Type)*)(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.Universe.Tree", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxCallMacros.yieldImpl", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#yieldImpl[R](func:CypherSyntaxCallMacros.this.c.universe.Tree,yieldsT:(CypherSyntaxCallMacros.this.c.universe.Tree,CypherSyntaxCallMacros.this.c.universe.Type)*)(implicitevidence$11:CypherSyntaxCallMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxCallMacros.this.c.universe.Tree", "kind" : "def"}, {"label" : "yield3", "tail" : "(yields1: scala.reflect.macros.Universe.Tree, yields2: scala.reflect.macros.Universe.Tree, yields3: scala.reflect.macros.Universe.Tree)(res: scala.reflect.macros.Universe.Tree)(arg0: scala.reflect.macros.Universe.WeakTypeTag[A1], arg1: scala.reflect.macros.Universe.WeakTypeTag[A2], arg2: scala.reflect.macros.Universe.WeakTypeTag[A3], arg3: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.Universe.Tree", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxCallMacros.yield3", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#yield3[A1,A2,A3,R](yields1:CypherSyntaxCallMacros.this.c.universe.Tree,yields2:CypherSyntaxCallMacros.this.c.universe.Tree,yields3:CypherSyntaxCallMacros.this.c.universe.Tree)(res:CypherSyntaxCallMacros.this.c.universe.Tree)(implicitevidence$7:CypherSyntaxCallMacros.this.c.universe.WeakTypeTag[A1],implicitevidence$8:CypherSyntaxCallMacros.this.c.universe.WeakTypeTag[A2],implicitevidence$9:CypherSyntaxCallMacros.this.c.universe.WeakTypeTag[A3],implicitevidence$10:CypherSyntaxCallMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxCallMacros.this.c.universe.Tree", "kind" : "def"}, {"label" : "yield2", "tail" : "(yields1: scala.reflect.macros.Universe.Tree, yields2: scala.reflect.macros.Universe.Tree)(res: scala.reflect.macros.Universe.Tree)(arg0: scala.reflect.macros.Universe.WeakTypeTag[A1], arg1: scala.reflect.macros.Universe.WeakTypeTag[A2], arg2: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.Universe.Tree", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxCallMacros.yield2", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#yield2[A1,A2,R](yields1:CypherSyntaxCallMacros.this.c.universe.Tree,yields2:CypherSyntaxCallMacros.this.c.universe.Tree)(res:CypherSyntaxCallMacros.this.c.universe.Tree)(implicitevidence$4:CypherSyntaxCallMacros.this.c.universe.WeakTypeTag[A1],implicitevidence$5:CypherSyntaxCallMacros.this.c.universe.WeakTypeTag[A2],implicitevidence$6:CypherSyntaxCallMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxCallMacros.this.c.universe.Tree", "kind" : "def"}, {"label" : "yield1", "tail" : "(yields1: scala.reflect.macros.Universe.Tree)(res: scala.reflect.macros.Universe.Tree)(arg0: scala.reflect.macros.Universe.WeakTypeTag[A1], arg1: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.Universe.Tree", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxCallMacros.yield1", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#yield1[A1,R](yields1:CypherSyntaxCallMacros.this.c.universe.Tree)(res:CypherSyntaxCallMacros.this.c.universe.Tree)(implicitevidence$2:CypherSyntaxCallMacros.this.c.universe.WeakTypeTag[A1],implicitevidence$3:CypherSyntaxCallMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxCallMacros.this.c.universe.Tree", "kind" : "def"}, {"label" : "void", "tail" : "(res: scala.reflect.macros.Universe.Tree)(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.Universe.Tree", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxCallMacros.void", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#void[R](res:CypherSyntaxCallMacros.this.c.universe.Tree)(implicitevidence$1:CypherSyntaxCallMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxCallMacros.this.c.universe.Tree", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxCallMacros#<init>", "error" : "unsupported entity"}, {"label" : "c", "tail" : ": Context", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxCallMacros.c", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#c:scala.reflect.macros.whitebox.Context", "kind" : "val"}, {"label" : "liftablePatternA", "tail" : ": scala.reflect.macros.Universe.Liftable[PatternA]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.liftablePatternA", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#liftablePatternA:CypherSyntaxPatternMacros.this.c.universe.Liftable[com.arkondata.slothql.cypher.CypherFragment.Pattern.PatternA]", "kind" : "implicit lazy val"}, {"label" : "transformBody", "tail" : "(names: Map[String, String], body: scala.reflect.macros.Universe.Tree): scala.reflect.macros.Universe.Tree", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.transformBody", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#transformBody(names:Map[String,String],body:CypherSyntaxPatternMacros.this.c.universe.Tree):CypherSyntaxPatternMacros.this.c.universe.Tree", "kind" : "def"}, {"label" : "mkPattern", "tail" : "(elems: List[Elem]): scala.reflect.macros.whitebox.Context.Expr[Pattern0]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.mkPattern", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#mkPattern(elems:List[CypherSyntaxPatternMacros.this.Pattern.Elem]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Pattern.Pattern0]", "kind" : "def"}, {"label" : "maybeLetPattern", "tail" : "(letOpt: Option[scala.reflect.macros.whitebox.Context.Expr[Alias]], elems: List[Elem]): scala.reflect.macros.whitebox.Context.Expr[Pattern]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.maybeLetPattern", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#maybeLetPattern(letOpt:Option[CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherStatement.Alias]],elems:List[CypherSyntaxPatternMacros.this.Pattern.Elem]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Pattern]", "kind" : "def"}, {"label" : "qImpl", "tail" : "(query0: scala.reflect.macros.whitebox.Context.Expr[(Node) => Query0[R]])(mkClause: (Guard, QPattern) => scala.reflect.macros.whitebox.Context.Expr[Clause])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.whitebox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.qImpl", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#qImpl[R](query0:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]])(mkClause:(CypherSyntaxPatternMacros.this.Guard,CypherSyntaxPatternMacros.this.QPattern)=>CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Clause])(implicitevidence$7:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "impl", "tail" : "(query: scala.reflect.macros.whitebox.Context.Expr[(Node) => CypherFragment.Query[R]])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): (Guard, QPattern, QDefs, QInner[R])", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.impl", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#impl[R](query:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query[R]])(implicitevidence$6:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):(CypherSyntaxPatternMacros.this.Guard,CypherSyntaxPatternMacros.this.QPattern,CypherSyntaxPatternMacros.this.QDefs,CypherSyntaxPatternMacros.this.QInner[R])", "kind" : "def"}, {"label" : "QInner", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.QInner", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#QInner[R]=CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "type"}, {"label" : "QDefs", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.QDefs", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#QDefs=List[CypherSyntaxPatternMacros.this.c.universe.Tree]", "kind" : "type"}, {"label" : "QPattern", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.QPattern", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#QPattern=CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Pattern]", "kind" : "type"}, {"label" : "Guard", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.Guard", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#Guard=CypherSyntaxPatternMacros.this.c.Expr[Option[com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]]]", "kind" : "type"}, {"label" : "matchImpl", "tail" : "(query: scala.reflect.macros.whitebox.Context.Expr[(Node) => Query0[R]], optional: scala.reflect.macros.whitebox.Context.Expr[Boolean])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.whitebox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.matchImpl", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#matchImpl[R](query:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]],optional:CypherSyntaxPatternMacros.this.c.Expr[Boolean])(implicitevidence$5:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "create", "tail" : "(query: scala.reflect.macros.whitebox.Context.Expr[(Node) => Query0[R]])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.whitebox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.create", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#create[R](query:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]])(implicitevidence$4:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "maybe", "tail" : "(opt: scala.reflect.macros.whitebox.Context.Expr[Boolean])(query: scala.reflect.macros.whitebox.Context.Expr[(Node) => Query0[R]])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.whitebox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.maybe", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#maybe[R](opt:CypherSyntaxPatternMacros.this.c.Expr[Boolean])(query:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]])(implicitevidence$3:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "optional", "tail" : "(query: scala.reflect.macros.whitebox.Context.Expr[(Node) => Query0[R]])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.whitebox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.optional", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#optional[R](query:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]])(implicitevidence$2:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "match_", "tail" : "(query: scala.reflect.macros.whitebox.Context.Expr[(Node) => Query0[R]])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.whitebox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.match_", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#match_[R](query:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]])(implicitevidence$1:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxCallMacros.html", "kind" : "class"}, {"name" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxCompareExprOps", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxCompareExprOps[A]) => Boolean, msg: => Any): CypherSyntaxCompareExprOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxCompareExprOps[A]) => Boolean): CypherSyntaxCompareExprOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): CypherSyntaxCompareExprOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CypherSyntaxCompareExprOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CypherSyntaxCompareExprOps[A], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CypherSyntaxCompareExprOps[A], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "in", "tail" : "(expr1: CypherFragment.Expr[List[A]]): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxCompareExprOps.in", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#in(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[List[A]]):com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"label" : ">", "tail" : "(expr1: CypherFragment.Expr[A]): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxCompareExprOps.>", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#>(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[A]):com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"label" : "gt", "tail" : "(expr1: CypherFragment.Expr[A]): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxCompareExprOps.gt", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#gt(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[A]):com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"label" : ">=", "tail" : "(expr1: CypherFragment.Expr[A]): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxCompareExprOps.>=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#>=(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[A]):com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"label" : "gte", "tail" : "(expr1: CypherFragment.Expr[A]): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxCompareExprOps.gte", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#gte(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[A]):com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"label" : "<=", "tail" : "(expr1: CypherFragment.Expr[A]): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxCompareExprOps.<=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#<=(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[A]):com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"label" : "lte", "tail" : "(expr1: CypherFragment.Expr[A]): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxCompareExprOps.lte", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#lte(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[A]):com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"label" : "<", "tail" : "(expr1: CypherFragment.Expr[A]): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxCompareExprOps.<", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#<(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[A]):com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"label" : "lt", "tail" : "(expr1: CypherFragment.Expr[A]): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxCompareExprOps.lt", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#lt(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[A]):com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"label" : "notNull", "tail" : "(): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxCompareExprOps.notNull", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#notNull:com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"label" : "isNull", "tail" : "(): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxCompareExprOps.isNull", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#isNull:com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"label" : "<>", "tail" : "(expr1: CypherFragment.Expr[_]): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxCompareExprOps.<>", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#<>(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[_]):com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"label" : "neq", "tail" : "(expr1: CypherFragment.Expr[_]): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxCompareExprOps.neq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#neq(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[_]):com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"label" : "===", "tail" : "(expr1: CypherFragment.Expr[_]): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxCompareExprOps.===", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#===(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[_]):com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"label" : "eq", "tail" : "(expr1: CypherFragment.Expr[_]): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxCompareExprOps.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#eq(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[_]):com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxCompareExprOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxCompareExprOps.html", "kind" : "class"}, {"name" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxFromMacro", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFromMacro$.html", "members_object" : [{"label" : "mkPath", "tail" : "(name: String): Path", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxFromMacro.mkPath", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFromMacro$.html#mkPath(name:String):com.arkondata.slothql.cypher.syntax.package.Path", "kind" : "def"}, {"label" : "mkRel", "tail" : "(name: String): Aux[D]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxFromMacro.mkRel", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFromMacro$.html#mkRel[D<:com.arkondata.slothql.cypher.syntax.package.Rel.Direction](name:String):com.arkondata.slothql.cypher.syntax.package.Rel.Aux[D]", "kind" : "def"}, {"label" : "mkNode", "tail" : "(name: String): Node", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxFromMacro.mkNode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFromMacro$.html#mkNode(name:String):com.arkondata.slothql.cypher.syntax.package.Node", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFromMacro$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFromMacro$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFromMacro$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFromMacro$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFromMacro$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFromMacro$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFromMacro$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFromMacro$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFromMacro$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFromMacro$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFromMacro$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFromMacro$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFromMacro$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFromMacro$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFromMacro$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFromMacro$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFromMacro$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFromMacro$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFromMacro$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxFuncOps", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxFuncOps) => Boolean, msg: => Any): CypherSyntaxFuncOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxFuncOps) => Boolean): CypherSyntaxFuncOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): CypherSyntaxFuncOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CypherSyntaxFuncOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CypherSyntaxFuncOps, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CypherSyntaxFuncOps, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "func", "tail" : "(args: CypherFragment.Expr[_]*): CypherFragment.Expr[R]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxFuncOps.func", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html#func[R](args:com.arkondata.slothql.cypher.CypherFragment.Expr[_]*):com.arkondata.slothql.cypher.CypherFragment.Expr[R]", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxFuncOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxFuncOps.html", "kind" : "class"}, {"name" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxGraphElemOps", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxGraphElemOps) => Boolean, msg: => Any): CypherSyntaxGraphElemOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxGraphElemOps) => Boolean): CypherSyntaxGraphElemOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): CypherSyntaxGraphElemOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CypherSyntaxGraphElemOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CypherSyntaxGraphElemOps, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CypherSyntaxGraphElemOps, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "keys", "tail" : "(): CypherFragment.Expr[List[String]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxGraphElemOps.keys", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#keys:com.arkondata.slothql.cypher.CypherFragment.Expr[List[String]]", "kind" : "def"}, {"label" : "count", "tail" : "(): CypherFragment.Expr[Long]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxGraphElemOps.count", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#count:com.arkondata.slothql.cypher.CypherFragment.Expr[Long]", "kind" : "def"}, {"label" : "id", "tail" : "(): CypherFragment.Expr[Long]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxGraphElemOps.id", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#id:com.arkondata.slothql.cypher.CypherFragment.Expr[Long]", "kind" : "def"}, {"label" : "func", "tail" : "(func: String, args: CypherFragment.Expr[_]*): CypherFragment.Expr[R]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxGraphElemOps.func", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#func[R](func:String,args:com.arkondata.slothql.cypher.CypherFragment.Expr[_]*):com.arkondata.slothql.cypher.CypherFragment.Expr[R]", "kind" : "def"}, {"label" : "propOpt", "tail" : "(k: String): CypherFragment.Expr[Option[A]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxGraphElemOps.propOpt", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#propOpt[A](k:String):com.arkondata.slothql.cypher.CypherFragment.Expr[Option[A]]", "kind" : "def"}, {"label" : "prop", "tail" : "(k: String): CypherFragment.Expr[A]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxGraphElemOps.prop", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#prop[A](k:String):com.arkondata.slothql.cypher.CypherFragment.Expr[A]", "kind" : "def"}, {"label" : "props", "tail" : "(): CypherFragment.Expr[Map[String, Any]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxGraphElemOps.props", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#props:com.arkondata.slothql.cypher.CypherFragment.Expr[Map[String,Any]]", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxGraphElemOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxGraphElemOps.html", "kind" : "class"}, {"name" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxInternal", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html", "members_object" : [{"label" : "RNXIO", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxInternal.RNXIO", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html#RNXIOextendsAnyRef", "kind" : "sealed trait"}, {"label" : "RNXII", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxInternal.RNXII", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html#RNXIIextendsAnyRef", "kind" : "sealed trait"}, {"label" : "RNX", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxInternal.RNX", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html#RNXextendsCypherSyntaxInternal.RN", "kind" : "sealed trait"}, {"label" : "RNO", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxInternal.RNO", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html#RNOextendsCypherSyntaxInternal.RN", "kind" : "sealed trait"}, {"label" : "RNI", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxInternal.RNI", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html#RNIextendsCypherSyntaxInternal.RN", "kind" : "sealed trait"}, {"label" : "RN", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxInternal.RN", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html#RNextendsAnyRef", "kind" : "sealed trait"}, {"label" : "NRO", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxInternal.NRO", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html#NROextendsCypherSyntaxInternal.NR", "kind" : "sealed trait"}, {"label" : "NRI", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxInternal.NRI", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html#NRIextendsCypherSyntaxInternal.NR", "kind" : "sealed trait"}, {"label" : "NR", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxInternal.NR", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html#NRextendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxInternal$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxLogicExprOps", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxLogicExprOps) => Boolean, msg: => Any): CypherSyntaxLogicExprOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxLogicExprOps) => Boolean): CypherSyntaxLogicExprOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): CypherSyntaxLogicExprOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CypherSyntaxLogicExprOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CypherSyntaxLogicExprOps, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CypherSyntaxLogicExprOps, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "xor", "tail" : "(expr1: CypherFragment.Expr[Boolean]): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxLogicExprOps.xor", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#xor(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]):com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"label" : "||", "tail" : "(expr1: CypherFragment.Expr[Boolean]): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxLogicExprOps.||", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#||(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]):com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"label" : "or", "tail" : "(expr1: CypherFragment.Expr[Boolean]): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxLogicExprOps.or", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#or(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]):com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"label" : "&&", "tail" : "(expr1: CypherFragment.Expr[Boolean]): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxLogicExprOps.&&", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#&&(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]):com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"label" : "and", "tail" : "(expr1: CypherFragment.Expr[Boolean]): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxLogicExprOps.and", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#and(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]):com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxLogicExprOps.unary_!", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#unary_!:com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxLogicExprOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxLogicExprOps.html", "kind" : "class"}, {"name" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxLowPriorityImplicits", "trait" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html", "kind" : "trait", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxLowPriorityImplicits) => Boolean, msg: => Any): CypherSyntaxLowPriorityImplicits", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxLowPriorityImplicits) => Boolean): CypherSyntaxLowPriorityImplicits", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): CypherSyntaxLowPriorityImplicits", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CypherSyntaxLowPriorityImplicits", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CypherSyntaxLowPriorityImplicits, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CypherSyntaxLowPriorityImplicits, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "optionalBooleanCypherExprToBooleanForIfGuard", "tail" : "(expr: Option[CypherFragment.Expr[Boolean]]): Boolean", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxLowPriorityImplicits.optionalBooleanCypherExprToBooleanForIfGuard", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#optionalBooleanCypherExprToBooleanForIfGuard(expr:Option[com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]]):Boolean", "kind" : "implicit def"}, {"label" : "booleanCypherExprToBooleanForIfGuard", "tail" : "(expr: CypherFragment.Expr[Boolean]): Boolean", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxLowPriorityImplicits.booleanCypherExprToBooleanForIfGuard", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#booleanCypherExprToBooleanForIfGuard(expr:com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]):Boolean", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxLowPriorityImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxMacros", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxMacros) => Boolean, msg: => Any): CypherSyntaxMacros", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxMacros) => Boolean): CypherSyntaxMacros", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): CypherSyntaxMacros", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CypherSyntaxMacros", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CypherSyntaxMacros, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CypherSyntaxMacros, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "mkTupleType", "tail" : "(types: List[scala.reflect.macros.Universe.Type]): scala.reflect.macros.Universe.Type", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxMacros.mkTupleType", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#mkTupleType(types:List[CypherSyntaxMacros.this.c.universe.Type]):CypherSyntaxMacros.this.c.universe.Type", "kind" : "def"}, {"label" : "ReturnExprSymb", "tail" : ": scala.reflect.macros.Universe.TypeSymbol", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxMacros.ReturnExprSymb", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#ReturnExprSymb:CypherSyntaxMacros.this.c.universe.TypeSymbol", "kind" : "lazy val"}, {"label" : "ExprSymb", "tail" : ": scala.reflect.macros.Universe.TypeSymbol", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxMacros.ExprSymb", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#ExprSymb:CypherSyntaxMacros.this.c.universe.TypeSymbol", "kind" : "lazy val"}, {"label" : "ScalaPackageType", "tail" : ": scala.reflect.macros.Universe.Type", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxMacros.ScalaPackageType", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#ScalaPackageType:CypherSyntaxMacros.this.c.universe.Type", "kind" : "lazy val"}, {"label" : "returnTuple", "tail" : "(arg0: scala.reflect.macros.Universe.WeakTypeTag[T]): scala.reflect.macros.Universe.Tree", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxMacros.returnTuple", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#returnTuple[T](implicitevidence$1:CypherSyntaxMacros.this.c.universe.WeakTypeTag[T]):CypherSyntaxMacros.this.c.universe.Tree", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxMacros#<init>", "error" : "unsupported entity"}, {"label" : "c", "tail" : ": Context", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxMacros.c", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#c:scala.reflect.macros.whitebox.Context", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxMacros.html", "kind" : "class"}, {"name" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxMathematicalExprOps", "shortDescription" : "", "members_class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxMathematicalExprOps[N]) => Boolean, msg: => Any): CypherSyntaxMathematicalExprOps[N]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxMathematicalExprOps[N]) => Boolean): CypherSyntaxMathematicalExprOps[N]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): CypherSyntaxMathematicalExprOps[N]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CypherSyntaxMathematicalExprOps[N]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CypherSyntaxMathematicalExprOps[N], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CypherSyntaxMathematicalExprOps[N], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "^", "tail" : "(expr1: CypherFragment.Expr[N]): CypherFragment.Expr[N]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxMathematicalExprOps.^", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#^(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[N]):com.arkondata.slothql.cypher.CypherFragment.Expr[N]", "kind" : "def"}, {"label" : "%", "tail" : "(expr1: CypherFragment.Expr[N]): CypherFragment.Expr[N]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxMathematicalExprOps.%", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#%(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[N]):com.arkondata.slothql.cypher.CypherFragment.Expr[N]", "kind" : "def"}, {"label" : "\/", "tail" : "(expr1: CypherFragment.Expr[N]): CypherFragment.Expr[N]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxMathematicalExprOps.\/", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#\/(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[N]):com.arkondata.slothql.cypher.CypherFragment.Expr[N]", "kind" : "def"}, {"label" : "*", "tail" : "(expr1: CypherFragment.Expr[N]): CypherFragment.Expr[N]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxMathematicalExprOps.*", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#*(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[N]):com.arkondata.slothql.cypher.CypherFragment.Expr[N]", "kind" : "def"}, {"label" : "-", "tail" : "(expr1: CypherFragment.Expr[N]): CypherFragment.Expr[N]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxMathematicalExprOps.-", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#-(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[N]):com.arkondata.slothql.cypher.CypherFragment.Expr[N]", "kind" : "def"}, {"label" : "+", "tail" : "(expr1: CypherFragment.Expr[N]): CypherFragment.Expr[N]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxMathematicalExprOps.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#+(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[N]):com.arkondata.slothql.cypher.CypherFragment.Expr[N]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): CypherFragment.Expr[N]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxMathematicalExprOps.unary_-", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#unary_-:com.arkondata.slothql.cypher.CypherFragment.Expr[N]", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxMathematicalExprOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxMathematicalExprOps.html", "kind" : "class"}, {"name" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxNodeOps", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxNodeOps) => Boolean, msg: => Any): CypherSyntaxNodeOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxNodeOps) => Boolean): CypherSyntaxNodeOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): CypherSyntaxNodeOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CypherSyntaxNodeOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CypherSyntaxNodeOps, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CypherSyntaxNodeOps, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "labels", "tail" : "(): CypherFragment.Expr[List[String]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxNodeOps.labels", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html#labels:com.arkondata.slothql.cypher.CypherFragment.Expr[List[String]]", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxNodeOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNodeOps.html", "kind" : "class"}, {"name" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxNullableOps", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxNullableOps[A]) => Boolean, msg: => Any): CypherSyntaxNullableOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxNullableOps[A]) => Boolean): CypherSyntaxNullableOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): CypherSyntaxNullableOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CypherSyntaxNullableOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CypherSyntaxNullableOps[A], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CypherSyntaxNullableOps[A], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "nullable", "tail" : "(): CypherFragment.Expr[A]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxNullableOps.nullable", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html#nullable:com.arkondata.slothql.cypher.CypherFragment.Expr[A]", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxNullableOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxNullableOps.html", "kind" : "class"}, {"name" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxOptionalOps", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxOptionalOps[A]) => Boolean, msg: => Any): CypherSyntaxOptionalOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxOptionalOps[A]) => Boolean): CypherSyntaxOptionalOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): CypherSyntaxOptionalOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CypherSyntaxOptionalOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CypherSyntaxOptionalOps[A], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CypherSyntaxOptionalOps[A], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "optional", "tail" : "(): CypherFragment.Expr[Option[A]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxOptionalOps.optional", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html#optional:com.arkondata.slothql.cypher.CypherFragment.Expr[Option[A]]", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxOptionalOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxOptionalOps.html", "kind" : "class"}, {"name" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPathOps", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxPathOps) => Boolean, msg: => Any): CypherSyntaxPathOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxPathOps) => Boolean): CypherSyntaxPathOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): CypherSyntaxPathOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CypherSyntaxPathOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CypherSyntaxPathOps, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CypherSyntaxPathOps, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "length", "tail" : "(): CypherFragment.Expr[Long]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPathOps.length", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#length:com.arkondata.slothql.cypher.CypherFragment.Expr[Long]", "kind" : "def"}, {"label" : "relationships", "tail" : "(): CypherFragment.Expr[List[GraphElem.Rel]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPathOps.relationships", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#relationships:com.arkondata.slothql.cypher.CypherFragment.Expr[List[com.arkondata.slothql.cypher.GraphElem.Rel]]", "kind" : "def"}, {"label" : "nodes", "tail" : "(): CypherFragment.Expr[List[GraphElem.Node]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPathOps.nodes", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#nodes:com.arkondata.slothql.cypher.CypherFragment.Expr[List[com.arkondata.slothql.cypher.GraphElem.Node]]", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPathOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxPathOps.html", "kind" : "class"}, {"name" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxPatternMacros) => Boolean, msg: => Any): CypherSyntaxPatternMacros", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxPatternMacros) => Boolean): CypherSyntaxPatternMacros", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): CypherSyntaxPatternMacros", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CypherSyntaxPatternMacros", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CypherSyntaxPatternMacros, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CypherSyntaxPatternMacros, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "Pattern", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.Pattern", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#Pattern", "kind" : "object"}, {"label" : "PatternPlus", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.PatternPlus", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#PatternPlus", "kind" : "object"}, {"label" : "liftablePatternA", "tail" : ": scala.reflect.macros.Universe.Liftable[PatternA]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.liftablePatternA", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#liftablePatternA:CypherSyntaxPatternMacros.this.c.universe.Liftable[com.arkondata.slothql.cypher.CypherFragment.Pattern.PatternA]", "kind" : "implicit lazy val"}, {"label" : "BodyTransformer", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.BodyTransformer", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#BodyTransformerextendsCypherSyntaxPatternMacros.this.c.universe.Transformer", "kind" : "class"}, {"label" : "transformBody", "tail" : "(names: Map[String, String], body: scala.reflect.macros.Universe.Tree): scala.reflect.macros.Universe.Tree", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.transformBody", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#transformBody(names:Map[String,String],body:CypherSyntaxPatternMacros.this.c.universe.Tree):CypherSyntaxPatternMacros.this.c.universe.Tree", "kind" : "def"}, {"label" : "mkPattern", "tail" : "(elems: List[Elem]): scala.reflect.macros.blackbox.Context.Expr[Pattern0]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.mkPattern", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#mkPattern(elems:List[CypherSyntaxPatternMacros.this.Pattern.Elem]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Pattern.Pattern0]", "kind" : "def"}, {"label" : "maybeLetPattern", "tail" : "(letOpt: Option[scala.reflect.macros.blackbox.Context.Expr[Alias]], elems: List[Elem]): scala.reflect.macros.blackbox.Context.Expr[Pattern]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.maybeLetPattern", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#maybeLetPattern(letOpt:Option[CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherStatement.Alias]],elems:List[CypherSyntaxPatternMacros.this.Pattern.Elem]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Pattern]", "kind" : "def"}, {"label" : "qImpl", "tail" : "(query0: scala.reflect.macros.blackbox.Context.Expr[(Node) => Query0[R]])(mkClause: (Guard, QPattern) => scala.reflect.macros.blackbox.Context.Expr[Clause])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.qImpl", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#qImpl[R](query0:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]])(mkClause:(CypherSyntaxPatternMacros.this.Guard,CypherSyntaxPatternMacros.this.QPattern)=>CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Clause])(implicitevidence$7:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "impl", "tail" : "(query: scala.reflect.macros.blackbox.Context.Expr[(Node) => CypherFragment.Query[R]])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): (Guard, QPattern, QDefs, QInner[R])", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.impl", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#impl[R](query:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query[R]])(implicitevidence$6:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):(CypherSyntaxPatternMacros.this.Guard,CypherSyntaxPatternMacros.this.QPattern,CypherSyntaxPatternMacros.this.QDefs,CypherSyntaxPatternMacros.this.QInner[R])", "kind" : "def"}, {"label" : "QInner", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.QInner", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#QInner[R]=CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "type"}, {"label" : "QDefs", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.QDefs", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#QDefs=List[CypherSyntaxPatternMacros.this.c.universe.Tree]", "kind" : "type"}, {"label" : "QPattern", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.QPattern", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#QPattern=CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Pattern]", "kind" : "type"}, {"label" : "Guard", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.Guard", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#Guard=CypherSyntaxPatternMacros.this.c.Expr[Option[com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]]]", "kind" : "type"}, {"label" : "matchImpl", "tail" : "(query: scala.reflect.macros.blackbox.Context.Expr[(Node) => Query0[R]], optional: scala.reflect.macros.blackbox.Context.Expr[Boolean])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.matchImpl", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#matchImpl[R](query:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]],optional:CypherSyntaxPatternMacros.this.c.Expr[Boolean])(implicitevidence$5:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "create", "tail" : "(query: scala.reflect.macros.blackbox.Context.Expr[(Node) => Query0[R]])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.create", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#create[R](query:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]])(implicitevidence$4:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "maybe", "tail" : "(opt: scala.reflect.macros.blackbox.Context.Expr[Boolean])(query: scala.reflect.macros.blackbox.Context.Expr[(Node) => Query0[R]])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.maybe", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#maybe[R](opt:CypherSyntaxPatternMacros.this.c.Expr[Boolean])(query:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]])(implicitevidence$3:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "optional", "tail" : "(query: scala.reflect.macros.blackbox.Context.Expr[(Node) => Query0[R]])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.optional", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#optional[R](query:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]])(implicitevidence$2:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "match_", "tail" : "(query: scala.reflect.macros.blackbox.Context.Expr[(Node) => Query0[R]])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.match_", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#match_[R](query:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]])(implicitevidence$1:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros#<init>", "error" : "unsupported entity"}, {"label" : "c", "tail" : ": Context", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.c", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#c:scala.reflect.macros.blackbox.Context", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html", "kind" : "class"}, {"name" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxProcedureOps", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxProcedureOps$.html", "members_object" : [{"label" : "CallBuilder", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxProcedureOps.CallBuilder", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxProcedureOps$.html#CallBuilderextendsAnyRef", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxProcedureOps$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxProcedureOps$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxProcedureOps$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxProcedureOps$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxProcedureOps$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxProcedureOps$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxProcedureOps$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxProcedureOps$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxProcedureOps$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxProcedureOps$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxProcedureOps$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxProcedureOps$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxProcedureOps$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxProcedureOps$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxProcedureOps$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxProcedureOps$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxProcedureOps$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxProcedureOps$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxProcedureOps$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxRelOps", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxRelOps) => Boolean, msg: => Any): CypherSyntaxRelOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxRelOps) => Boolean): CypherSyntaxRelOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): CypherSyntaxRelOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CypherSyntaxRelOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CypherSyntaxRelOps, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CypherSyntaxRelOps, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "type", "tail" : "(): CypherFragment.Expr[String]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxRelOps.type", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#type:com.arkondata.slothql.cypher.CypherFragment.Expr[String]", "kind" : "def"}, {"label" : "tpe", "tail" : "(): CypherFragment.Expr[String]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxRelOps.tpe", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#tpe:com.arkondata.slothql.cypher.CypherFragment.Expr[String]", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxRelOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxRelOps.html", "kind" : "class"}, {"name" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxReturnAsOps", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxReturnAsOps[A]) => Boolean, msg: => Any): CypherSyntaxReturnAsOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxReturnAsOps[A]) => Boolean): CypherSyntaxReturnAsOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): CypherSyntaxReturnAsOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CypherSyntaxReturnAsOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CypherSyntaxReturnAsOps[A], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CypherSyntaxReturnAsOps[A], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "as", "tail" : "(alias: String): CypherFragment.Return.Expr[A]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxReturnAsOps.as", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#as(alias:String):com.arkondata.slothql.cypher.CypherFragment.Return.Expr[A]", "kind" : "def"}, {"label" : "as", "tail" : "(alias: Alias): CypherFragment.Return.Expr[A]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxReturnAsOps.as", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#as(alias:com.arkondata.slothql.cypher.CypherStatement.Alias):com.arkondata.slothql.cypher.CypherFragment.Return.Expr[A]", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxReturnAsOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnAsOps.html", "kind" : "class"}, {"name" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxReturnOps", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxReturnOps[T, Done, R]) => Boolean, msg: => Any): CypherSyntaxReturnOps[T, Done, R]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxReturnOps[T, Done, R]) => Boolean): CypherSyntaxReturnOps[T, Done, R]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): CypherSyntaxReturnOps[T, Done, R]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CypherSyntaxReturnOps[T, Done, R]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CypherSyntaxReturnOps[T, Done, R], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CypherSyntaxReturnOps[T, Done, R], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "return", "tail" : "(): Return[R]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxReturnOps.return", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#return:com.arkondata.slothql.cypher.CypherFragment.Return[R]", "kind" : "def"}, {"label" : "limit", "tail" : "(inp: Input[N])(arg0: <:<[((N) => Nothing) => Nothing, ((Int) => Nothing with (Long) => Nothing) => Nothing], notYet: NotYet[Done, Limit]): CypherSyntaxReturnOps[T, ::[Limit, Done], R]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxReturnOps.limit", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#limit[N](inp:com.arkondata.slothql.cypher.CypherFragment.Expr.Input[N])(implicitevidence$2:(N=>Nothing)=>Nothing<:<Int=>NothingwithLong=>Nothing=>Nothing,implicitnotYet:com.arkondata.slothql.cypher.syntax.package.CypherSyntaxReturnOps.NotYet[Done,com.arkondata.slothql.cypher.syntax.package.CypherSyntaxReturnOps.Opt.Limit]):com.arkondata.slothql.cypher.syntax.package.CypherSyntaxReturnOps[T,com.arkondata.slothql.cypher.syntax.package.CypherSyntaxReturnOps.Opt.Limit::Done,R]", "kind" : "def"}, {"label" : "skip", "tail" : "(inp: Input[N])(arg0: <:<[((N) => Nothing) => Nothing, ((Int) => Nothing with (Long) => Nothing) => Nothing], notYet: NotYet[Done, Skip]): CypherSyntaxReturnOps[T, ::[Skip, Done], R]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxReturnOps.skip", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#skip[N](inp:com.arkondata.slothql.cypher.CypherFragment.Expr.Input[N])(implicitevidence$1:(N=>Nothing)=>Nothing<:<Int=>NothingwithLong=>Nothing=>Nothing,implicitnotYet:com.arkondata.slothql.cypher.syntax.package.CypherSyntaxReturnOps.NotYet[Done,com.arkondata.slothql.cypher.syntax.package.CypherSyntaxReturnOps.Opt.Skip]):com.arkondata.slothql.cypher.syntax.package.CypherSyntaxReturnOps[T,com.arkondata.slothql.cypher.syntax.package.CypherSyntaxReturnOps.Opt.Skip::Done,R]", "kind" : "def"}, {"label" : "orderBy", "tail" : "(expr: CypherFragment.Expr[_], ord: (Order.type) => Order): CypherSyntaxReturnOps[T, Done, R]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxReturnOps.orderBy", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#orderBy(expr:com.arkondata.slothql.cypher.CypherFragment.Expr[_],ord:com.arkondata.slothql.cypher.CypherFragment.Return.Order.type=>com.arkondata.slothql.cypher.CypherFragment.Return.Order):com.arkondata.slothql.cypher.syntax.package.CypherSyntaxReturnOps[T,Done,R]", "kind" : "def"}, {"label" : "orderBy", "tail" : "(expr: CypherFragment.Expr[_], ord: Order): CypherSyntaxReturnOps[T, Done, R]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxReturnOps.orderBy", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#orderBy(expr:com.arkondata.slothql.cypher.CypherFragment.Expr[_],ord:com.arkondata.slothql.cypher.CypherFragment.Return.Order):com.arkondata.slothql.cypher.syntax.package.CypherSyntaxReturnOps[T,Done,R]", "kind" : "def"}, {"label" : "distinct", "tail" : "(notYet: NotYet[Done, Distinct]): CypherSyntaxReturnOps[T, ::[Distinct, Done], R]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxReturnOps.distinct", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#distinct(implicitnotYet:com.arkondata.slothql.cypher.syntax.package.CypherSyntaxReturnOps.NotYet[Done,com.arkondata.slothql.cypher.syntax.package.CypherSyntaxReturnOps.Opt.Distinct]):com.arkondata.slothql.cypher.syntax.package.CypherSyntaxReturnOps[T,com.arkondata.slothql.cypher.syntax.package.CypherSyntaxReturnOps.Opt.Distinct::Done,R]", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxReturnOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "NotYet", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxReturnOps.NotYet", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html#NotYet", "kind" : "object"}, {"label" : "NotYet", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxReturnOps.NotYet", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html#NotYet[Done<:shapeless.HList,S<:com.arkondata.slothql.cypher.syntax.CypherSyntaxReturnOps.Opt]extendsAnyRef", "kind" : "trait"}, {"label" : "Opt", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxReturnOps.Opt", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html#Opt", "kind" : "object"}, {"label" : "Opt", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxReturnOps.Opt", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html#OptextendsAnyRef", "kind" : "sealed trait"}, {"label" : "CanReturn", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxReturnOps.CanReturn", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html#CanReturn", "kind" : "object"}, {"label" : "CanReturn", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxReturnOps.CanReturn", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html#CanReturn[T]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "query0FromCypherSyntaxReturnOps", "tail" : "(ops: CypherSyntaxReturnOps[T, L, R]): Query0[R]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxReturnOps.query0FromCypherSyntaxReturnOps", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html#query0FromCypherSyntaxReturnOps[T,L<:shapeless.HList,R](ops:com.arkondata.slothql.cypher.syntax.package.CypherSyntaxReturnOps[T,L,R]):com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]", "kind" : "implicit def"}, {"label" : "returnClauseFromCypherSyntaxReturnOps", "tail" : "(ops: CypherSyntaxReturnOps[T, L, R]): Return[R]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxReturnOps.returnClauseFromCypherSyntaxReturnOps", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html#returnClauseFromCypherSyntaxReturnOps[T,L<:shapeless.HList,R](ops:com.arkondata.slothql.cypher.syntax.package.CypherSyntaxReturnOps[T,L,R]):com.arkondata.slothql.cypher.CypherFragment.Return[R]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnOps.html", "kind" : "class"}, {"name" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxReturnTuple", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple$.html", "members_object" : [{"label" : "cypherSyntaxReturnTuple", "tail" : "(): CypherSyntaxReturnTuple[T]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxReturnTuple.cypherSyntaxReturnTuple", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple$.html#cypherSyntaxReturnTuple[T<:Product]:com.arkondata.slothql.cypher.syntax.package.CypherSyntaxReturnTuple[T]", "kind" : "implicit macro def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html", "kind" : "trait", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxReturnTuple[T]) => Boolean, msg: => Any): CypherSyntaxReturnTuple[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxReturnTuple[T]) => Boolean): CypherSyntaxReturnTuple[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): CypherSyntaxReturnTuple[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CypherSyntaxReturnTuple[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CypherSyntaxReturnTuple[T], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CypherSyntaxReturnTuple[T], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(t: T): Return0[Out]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxReturnTuple.apply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxReturnTuple.html#apply(t:T):com.arkondata.slothql.cypher.CypherFragment.Return.Return0[CypherSyntaxReturnTuple.this.Out]", "kind" : "abstract def"}, {"member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxReturnTuple.Out", "error" : "unsupported entity"}], "shortDescription" : ""}, {"name" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxStringExprOps", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxStringExprOps) => Boolean, msg: => Any): CypherSyntaxStringExprOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxStringExprOps) => Boolean): CypherSyntaxStringExprOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): CypherSyntaxStringExprOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CypherSyntaxStringExprOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CypherSyntaxStringExprOps, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CypherSyntaxStringExprOps, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "trimRight", "tail" : "(): CypherFragment.Expr[String]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxStringExprOps.trimRight", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#trimRight:com.arkondata.slothql.cypher.CypherFragment.Expr[String]", "kind" : "def"}, {"label" : "trimLeft", "tail" : "(): CypherFragment.Expr[String]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxStringExprOps.trimLeft", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#trimLeft:com.arkondata.slothql.cypher.CypherFragment.Expr[String]", "kind" : "def"}, {"label" : "trim", "tail" : "(): CypherFragment.Expr[String]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxStringExprOps.trim", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#trim:com.arkondata.slothql.cypher.CypherFragment.Expr[String]", "kind" : "def"}, {"label" : "substring", "tail" : "(start: CypherFragment.Expr[Long], length: CypherFragment.Expr[Long]): CypherFragment.Expr[String]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxStringExprOps.substring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#substring(start:com.arkondata.slothql.cypher.CypherFragment.Expr[Long],length:com.arkondata.slothql.cypher.CypherFragment.Expr[Long]):com.arkondata.slothql.cypher.CypherFragment.Expr[String]", "kind" : "def"}, {"label" : "substring", "tail" : "(start: CypherFragment.Expr[Long]): CypherFragment.Expr[String]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxStringExprOps.substring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#substring(start:com.arkondata.slothql.cypher.CypherFragment.Expr[Long]):com.arkondata.slothql.cypher.CypherFragment.Expr[String]", "kind" : "def"}, {"label" : "split", "tail" : "(delimiter: CypherFragment.Expr[String]): CypherFragment.Expr[List[String]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxStringExprOps.split", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#split(delimiter:com.arkondata.slothql.cypher.CypherFragment.Expr[String]):com.arkondata.slothql.cypher.CypherFragment.Expr[List[String]]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): CypherFragment.Expr[String]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxStringExprOps.reverse", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#reverse:com.arkondata.slothql.cypher.CypherFragment.Expr[String]", "kind" : "def"}, {"label" : "replace", "tail" : "(search: CypherFragment.Expr[String], replace: CypherFragment.Expr[String]): CypherFragment.Expr[String]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxStringExprOps.replace", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#replace(search:com.arkondata.slothql.cypher.CypherFragment.Expr[String],replace:com.arkondata.slothql.cypher.CypherFragment.Expr[String]):com.arkondata.slothql.cypher.CypherFragment.Expr[String]", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: CypherFragment.Expr[Long]): CypherFragment.Expr[String]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxStringExprOps.takeRight", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#takeRight(n:com.arkondata.slothql.cypher.CypherFragment.Expr[Long]):com.arkondata.slothql.cypher.CypherFragment.Expr[String]", "kind" : "def"}, {"label" : "takeLeft", "tail" : "(n: CypherFragment.Expr[Long]): CypherFragment.Expr[String]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxStringExprOps.takeLeft", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#takeLeft(n:com.arkondata.slothql.cypher.CypherFragment.Expr[Long]):com.arkondata.slothql.cypher.CypherFragment.Expr[String]", "kind" : "def"}, {"label" : "toLong", "tail" : "(): CypherFragment.Expr[Long]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxStringExprOps.toLong", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#toLong:com.arkondata.slothql.cypher.CypherFragment.Expr[Long]", "kind" : "def"}, {"label" : "toDouble", "tail" : "(): CypherFragment.Expr[Double]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxStringExprOps.toDouble", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#toDouble:com.arkondata.slothql.cypher.CypherFragment.Expr[Double]", "kind" : "def"}, {"label" : "toBoolean", "tail" : "(): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxStringExprOps.toBoolean", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#toBoolean:com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"label" : "size", "tail" : "(): CypherFragment.Expr[Long]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxStringExprOps.size", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#size:com.arkondata.slothql.cypher.CypherFragment.Expr[Long]", "kind" : "def"}, {"label" : "toUpper", "tail" : "(): CypherFragment.Expr[String]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxStringExprOps.toUpper", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#toUpper:com.arkondata.slothql.cypher.CypherFragment.Expr[String]", "kind" : "def"}, {"label" : "toLower", "tail" : "(): CypherFragment.Expr[String]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxStringExprOps.toLower", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#toLower:com.arkondata.slothql.cypher.CypherFragment.Expr[String]", "kind" : "def"}, {"label" : "endsWith", "tail" : "(expr1: CypherFragment.Expr[String]): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxStringExprOps.endsWith", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#endsWith(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[String]):com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"label" : "startsWith", "tail" : "(expr1: CypherFragment.Expr[String]): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxStringExprOps.startsWith", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#startsWith(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[String]):com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"label" : "contains", "tail" : "(expr1: CypherFragment.Expr[String]): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxStringExprOps.contains", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#contains(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[String]):com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"label" : "matches", "tail" : "(expr1: CypherFragment.Expr[String]): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxStringExprOps.matches", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#matches(expr1:com.arkondata.slothql.cypher.CypherFragment.Expr[String]):com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxStringExprOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$CypherSyntaxStringExprOps.html", "kind" : "class"}, {"name" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxUnwindMacros", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxUnwindMacros) => Boolean, msg: => Any): CypherSyntaxUnwindMacros", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxUnwindMacros) => Boolean): CypherSyntaxUnwindMacros", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): CypherSyntaxUnwindMacros", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CypherSyntaxUnwindMacros", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CypherSyntaxUnwindMacros, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CypherSyntaxUnwindMacros, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "Pattern", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.Pattern", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#Pattern", "kind" : "object"}, {"label" : "PatternPlus", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.PatternPlus", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#PatternPlus", "kind" : "object"}, {"label" : "BodyTransformer", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.BodyTransformer", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#BodyTransformerextendsCypherSyntaxPatternMacros.this.c.universe.Transformer", "kind" : "class"}, {"label" : "unwind", "tail" : "(list: scala.reflect.macros.blackbox.Context.Expr[CypherFragment.Expr[List[A]]])(func: scala.reflect.macros.blackbox.Context.Expr[(CypherFragment.Expr[A]) => Query0[R]])(arg0: scala.reflect.macros.Universe.WeakTypeTag[A], arg1: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxUnwindMacros.unwind", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#unwind[A,R](list:CypherSyntaxUnwindMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Expr[List[A]]])(func:CypherSyntaxUnwindMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Expr[A]=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]])(implicitevidence$1:CypherSyntaxUnwindMacros.this.c.universe.WeakTypeTag[A],implicitevidence$2:CypherSyntaxUnwindMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxUnwindMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxUnwindMacros#<init>", "error" : "unsupported entity"}, {"label" : "c", "tail" : ": Context", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxUnwindMacros.c", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#c:scala.reflect.macros.blackbox.Context", "kind" : "val"}, {"label" : "liftablePatternA", "tail" : ": scala.reflect.macros.Universe.Liftable[PatternA]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.liftablePatternA", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#liftablePatternA:CypherSyntaxPatternMacros.this.c.universe.Liftable[com.arkondata.slothql.cypher.CypherFragment.Pattern.PatternA]", "kind" : "implicit lazy val"}, {"label" : "transformBody", "tail" : "(names: Map[String, String], body: scala.reflect.macros.Universe.Tree): scala.reflect.macros.Universe.Tree", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.transformBody", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#transformBody(names:Map[String,String],body:CypherSyntaxPatternMacros.this.c.universe.Tree):CypherSyntaxPatternMacros.this.c.universe.Tree", "kind" : "def"}, {"label" : "mkPattern", "tail" : "(elems: List[Elem]): scala.reflect.macros.blackbox.Context.Expr[Pattern0]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.mkPattern", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#mkPattern(elems:List[CypherSyntaxPatternMacros.this.Pattern.Elem]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Pattern.Pattern0]", "kind" : "def"}, {"label" : "maybeLetPattern", "tail" : "(letOpt: Option[scala.reflect.macros.blackbox.Context.Expr[Alias]], elems: List[Elem]): scala.reflect.macros.blackbox.Context.Expr[Pattern]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.maybeLetPattern", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#maybeLetPattern(letOpt:Option[CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherStatement.Alias]],elems:List[CypherSyntaxPatternMacros.this.Pattern.Elem]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Pattern]", "kind" : "def"}, {"label" : "qImpl", "tail" : "(query0: scala.reflect.macros.blackbox.Context.Expr[(Node) => Query0[R]])(mkClause: (Guard, QPattern) => scala.reflect.macros.blackbox.Context.Expr[Clause])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.qImpl", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#qImpl[R](query0:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]])(mkClause:(CypherSyntaxPatternMacros.this.Guard,CypherSyntaxPatternMacros.this.QPattern)=>CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Clause])(implicitevidence$7:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "impl", "tail" : "(query: scala.reflect.macros.blackbox.Context.Expr[(Node) => CypherFragment.Query[R]])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): (Guard, QPattern, QDefs, QInner[R])", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.impl", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#impl[R](query:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query[R]])(implicitevidence$6:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):(CypherSyntaxPatternMacros.this.Guard,CypherSyntaxPatternMacros.this.QPattern,CypherSyntaxPatternMacros.this.QDefs,CypherSyntaxPatternMacros.this.QInner[R])", "kind" : "def"}, {"label" : "QInner", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.QInner", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#QInner[R]=CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "type"}, {"label" : "QDefs", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.QDefs", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#QDefs=List[CypherSyntaxPatternMacros.this.c.universe.Tree]", "kind" : "type"}, {"label" : "QPattern", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.QPattern", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#QPattern=CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Pattern]", "kind" : "type"}, {"label" : "Guard", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.Guard", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#Guard=CypherSyntaxPatternMacros.this.c.Expr[Option[com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]]]", "kind" : "type"}, {"label" : "matchImpl", "tail" : "(query: scala.reflect.macros.blackbox.Context.Expr[(Node) => Query0[R]], optional: scala.reflect.macros.blackbox.Context.Expr[Boolean])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.matchImpl", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#matchImpl[R](query:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]],optional:CypherSyntaxPatternMacros.this.c.Expr[Boolean])(implicitevidence$5:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "create", "tail" : "(query: scala.reflect.macros.blackbox.Context.Expr[(Node) => Query0[R]])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.create", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#create[R](query:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]])(implicitevidence$4:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "maybe", "tail" : "(opt: scala.reflect.macros.blackbox.Context.Expr[Boolean])(query: scala.reflect.macros.blackbox.Context.Expr[(Node) => Query0[R]])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.maybe", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#maybe[R](opt:CypherSyntaxPatternMacros.this.c.Expr[Boolean])(query:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]])(implicitevidence$3:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "optional", "tail" : "(query: scala.reflect.macros.blackbox.Context.Expr[(Node) => Query0[R]])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.optional", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#optional[R](query:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]])(implicitevidence$2:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "match_", "tail" : "(query: scala.reflect.macros.blackbox.Context.Expr[(Node) => Query0[R]])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.match_", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#match_[R](query:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]])(implicitevidence$1:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxUnwindMacros.html", "kind" : "class"}, {"name" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxWithMacros", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxWithMacros) => Boolean, msg: => Any): CypherSyntaxWithMacros", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherSyntaxWithMacros) => Boolean): CypherSyntaxWithMacros", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): CypherSyntaxWithMacros", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CypherSyntaxWithMacros", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CypherSyntaxWithMacros, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CypherSyntaxWithMacros, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "Pattern", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.Pattern", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#Pattern", "kind" : "object"}, {"label" : "PatternPlus", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.PatternPlus", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#PatternPlus", "kind" : "object"}, {"label" : "BodyTransformer", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.BodyTransformer", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxPatternMacros.html#BodyTransformerextendsCypherSyntaxPatternMacros.this.c.universe.Transformer", "kind" : "class"}, {"label" : "Opt", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxWithMacros.Opt", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#Opt", "kind" : "object"}, {"label" : "Opt", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxWithMacros.Opt", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#OptextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "withImpl", "tail" : "(query: scala.reflect.macros.Universe.Tree, wildcard: Boolean, exprs: ExprWithInnerType*): scala.reflect.macros.blackbox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxWithMacros.withImpl", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#withImpl[R](query:CypherSyntaxWithMacros.this.c.universe.Tree,wildcard:Boolean,exprs:CypherSyntaxWithMacros.this.ExprWithInnerType*):CypherSyntaxWithMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "ExprWithInnerType", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxWithMacros.ExprWithInnerType", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#ExprWithInnerType=(CypherSyntaxWithMacros.this.c.universe.Tree,CypherSyntaxWithMacros.this.c.universe.Type)", "kind" : "type"}, {"label" : "withWild2", "tail" : "(wildcard: scala.reflect.macros.blackbox.Context.Expr[**.type], t1: scala.reflect.macros.blackbox.Context.Expr[CypherFragment.Expr[T1]], t2: scala.reflect.macros.blackbox.Context.Expr[CypherFragment.Expr[T2]])(query: scala.reflect.macros.blackbox.Context.Expr[(CypherFragment.Expr[T1], CypherFragment.Expr[T2]) => Query0[R]])(arg0: scala.reflect.macros.Universe.WeakTypeTag[T1], arg1: scala.reflect.macros.Universe.WeakTypeTag[T2], arg2: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxWithMacros.withWild2", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#withWild2[T1,T2,R](wildcard:CypherSyntaxWithMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.**.type],t1:CypherSyntaxWithMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Expr[T1]],t2:CypherSyntaxWithMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Expr[T2]])(query:CypherSyntaxWithMacros.this.c.Expr[(com.arkondata.slothql.cypher.CypherFragment.Expr[T1],com.arkondata.slothql.cypher.CypherFragment.Expr[T2])=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]])(implicitevidence$9:CypherSyntaxWithMacros.this.c.universe.WeakTypeTag[T1],implicitevidence$10:CypherSyntaxWithMacros.this.c.universe.WeakTypeTag[T2],implicitevidence$11:CypherSyntaxWithMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxWithMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "withWild1", "tail" : "(wildcard: scala.reflect.macros.blackbox.Context.Expr[**.type], t1: scala.reflect.macros.blackbox.Context.Expr[CypherFragment.Expr[T1]])(query: scala.reflect.macros.blackbox.Context.Expr[(CypherFragment.Expr[T1]) => Query0[R]])(arg0: scala.reflect.macros.Universe.WeakTypeTag[T1], arg1: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxWithMacros.withWild1", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#withWild1[T1,R](wildcard:CypherSyntaxWithMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.**.type],t1:CypherSyntaxWithMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Expr[T1]])(query:CypherSyntaxWithMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Expr[T1]=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]])(implicitevidence$7:CypherSyntaxWithMacros.this.c.universe.WeakTypeTag[T1],implicitevidence$8:CypherSyntaxWithMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxWithMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "withWild0", "tail" : "(wildcard: scala.reflect.macros.blackbox.Context.Expr[**.type])(query: scala.reflect.macros.blackbox.Context.Expr[Query0[R]])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxWithMacros.withWild0", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#withWild0[R](wildcard:CypherSyntaxWithMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.**.type])(query:CypherSyntaxWithMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]])(implicitevidence$6:CypherSyntaxWithMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxWithMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "with2", "tail" : "(t1: scala.reflect.macros.blackbox.Context.Expr[CypherFragment.Expr[T1]], t2: scala.reflect.macros.blackbox.Context.Expr[CypherFragment.Expr[T2]])(query: scala.reflect.macros.blackbox.Context.Expr[(CypherFragment.Expr[T1], CypherFragment.Expr[T2]) => Query0[R]])(arg0: scala.reflect.macros.Universe.WeakTypeTag[T1], arg1: scala.reflect.macros.Universe.WeakTypeTag[T2], arg2: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxWithMacros.with2", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#with2[T1,T2,R](t1:CypherSyntaxWithMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Expr[T1]],t2:CypherSyntaxWithMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Expr[T2]])(query:CypherSyntaxWithMacros.this.c.Expr[(com.arkondata.slothql.cypher.CypherFragment.Expr[T1],com.arkondata.slothql.cypher.CypherFragment.Expr[T2])=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]])(implicitevidence$3:CypherSyntaxWithMacros.this.c.universe.WeakTypeTag[T1],implicitevidence$4:CypherSyntaxWithMacros.this.c.universe.WeakTypeTag[T2],implicitevidence$5:CypherSyntaxWithMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxWithMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "with1", "tail" : "(t1: scala.reflect.macros.blackbox.Context.Expr[CypherFragment.Expr[T1]])(query: scala.reflect.macros.blackbox.Context.Expr[(CypherFragment.Expr[T1]) => Query0[R]])(arg0: scala.reflect.macros.Universe.WeakTypeTag[T1], arg1: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxWithMacros.with1", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#with1[T1,R](t1:CypherSyntaxWithMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Expr[T1]])(query:CypherSyntaxWithMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Expr[T1]=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]])(implicitevidence$1:CypherSyntaxWithMacros.this.c.universe.WeakTypeTag[T1],implicitevidence$2:CypherSyntaxWithMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxWithMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxWithMacros#<init>", "error" : "unsupported entity"}, {"label" : "c", "tail" : ": Context", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxWithMacros.c", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#c:scala.reflect.macros.blackbox.Context", "kind" : "val"}, {"label" : "liftablePatternA", "tail" : ": scala.reflect.macros.Universe.Liftable[PatternA]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.liftablePatternA", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#liftablePatternA:CypherSyntaxPatternMacros.this.c.universe.Liftable[com.arkondata.slothql.cypher.CypherFragment.Pattern.PatternA]", "kind" : "implicit lazy val"}, {"label" : "transformBody", "tail" : "(names: Map[String, String], body: scala.reflect.macros.Universe.Tree): scala.reflect.macros.Universe.Tree", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.transformBody", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#transformBody(names:Map[String,String],body:CypherSyntaxPatternMacros.this.c.universe.Tree):CypherSyntaxPatternMacros.this.c.universe.Tree", "kind" : "def"}, {"label" : "mkPattern", "tail" : "(elems: List[Elem]): scala.reflect.macros.blackbox.Context.Expr[Pattern0]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.mkPattern", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#mkPattern(elems:List[CypherSyntaxPatternMacros.this.Pattern.Elem]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Pattern.Pattern0]", "kind" : "def"}, {"label" : "maybeLetPattern", "tail" : "(letOpt: Option[scala.reflect.macros.blackbox.Context.Expr[Alias]], elems: List[Elem]): scala.reflect.macros.blackbox.Context.Expr[Pattern]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.maybeLetPattern", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#maybeLetPattern(letOpt:Option[CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherStatement.Alias]],elems:List[CypherSyntaxPatternMacros.this.Pattern.Elem]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Pattern]", "kind" : "def"}, {"label" : "qImpl", "tail" : "(query0: scala.reflect.macros.blackbox.Context.Expr[(Node) => Query0[R]])(mkClause: (Guard, QPattern) => scala.reflect.macros.blackbox.Context.Expr[Clause])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.qImpl", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#qImpl[R](query0:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]])(mkClause:(CypherSyntaxPatternMacros.this.Guard,CypherSyntaxPatternMacros.this.QPattern)=>CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Clause])(implicitevidence$7:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "impl", "tail" : "(query: scala.reflect.macros.blackbox.Context.Expr[(Node) => CypherFragment.Query[R]])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): (Guard, QPattern, QDefs, QInner[R])", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.impl", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#impl[R](query:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query[R]])(implicitevidence$6:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):(CypherSyntaxPatternMacros.this.Guard,CypherSyntaxPatternMacros.this.QPattern,CypherSyntaxPatternMacros.this.QDefs,CypherSyntaxPatternMacros.this.QInner[R])", "kind" : "def"}, {"label" : "QInner", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.QInner", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#QInner[R]=CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "type"}, {"label" : "QDefs", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.QDefs", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#QDefs=List[CypherSyntaxPatternMacros.this.c.universe.Tree]", "kind" : "type"}, {"label" : "QPattern", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.QPattern", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#QPattern=CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Pattern]", "kind" : "type"}, {"label" : "Guard", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.Guard", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#Guard=CypherSyntaxPatternMacros.this.c.Expr[Option[com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]]]", "kind" : "type"}, {"label" : "matchImpl", "tail" : "(query: scala.reflect.macros.blackbox.Context.Expr[(Node) => Query0[R]], optional: scala.reflect.macros.blackbox.Context.Expr[Boolean])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.matchImpl", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#matchImpl[R](query:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]],optional:CypherSyntaxPatternMacros.this.c.Expr[Boolean])(implicitevidence$5:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "create", "tail" : "(query: scala.reflect.macros.blackbox.Context.Expr[(Node) => Query0[R]])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.create", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#create[R](query:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]])(implicitevidence$4:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "maybe", "tail" : "(opt: scala.reflect.macros.blackbox.Context.Expr[Boolean])(query: scala.reflect.macros.blackbox.Context.Expr[(Node) => Query0[R]])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.maybe", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#maybe[R](opt:CypherSyntaxPatternMacros.this.c.Expr[Boolean])(query:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]])(implicitevidence$3:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "optional", "tail" : "(query: scala.reflect.macros.blackbox.Context.Expr[(Node) => Query0[R]])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.optional", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#optional[R](query:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]])(implicitevidence$2:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "match_", "tail" : "(query: scala.reflect.macros.blackbox.Context.Expr[(Node) => Query0[R]])(arg0: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[Query0[R]]", "member" : "com.arkondata.slothql.cypher.syntax.CypherSyntaxPatternMacros.match_", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#match_[R](query:CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.syntax.Node=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]])(implicitevidence$1:CypherSyntaxPatternMacros.this.c.universe.WeakTypeTag[R]):CypherSyntaxPatternMacros.this.c.Expr[com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/syntax\/CypherSyntaxWithMacros.html", "kind" : "class"}, {"name" : "com.arkondata.slothql.cypher.syntax.Delete", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Delete$.html", "members_object" : [{"label" : "detach", "tail" : "(elems: Expr[GraphElem.Node]*)(res: Query[R]): Query[R]", "member" : "com.arkondata.slothql.cypher.syntax.Delete.detach", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Delete$.html#detach[R](elems:com.arkondata.slothql.cypher.syntax.package.Expr[com.arkondata.slothql.cypher.GraphElem.Node]*)(res:com.arkondata.slothql.cypher.syntax.package.Query[R]):com.arkondata.slothql.cypher.syntax.package.Query[R]", "kind" : "def"}, {"label" : "apply", "tail" : "(elems: Expr[GraphElem]*)(res: Query[R]): Query[R]", "member" : "com.arkondata.slothql.cypher.syntax.Delete.apply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Delete$.html#apply[R](elems:com.arkondata.slothql.cypher.syntax.package.Expr[com.arkondata.slothql.cypher.GraphElem]*)(res:com.arkondata.slothql.cypher.syntax.package.Query[R]):com.arkondata.slothql.cypher.syntax.package.Query[R]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Delete$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Delete$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Delete$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Delete$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Delete$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Delete$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Delete$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Delete$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Delete$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Delete$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Delete$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Delete$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Delete$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Delete$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Delete$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Delete$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Delete$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Delete$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Delete$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.arkondata.slothql.cypher.syntax.Foreach", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Foreach$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Foreach$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Foreach$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Foreach$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Foreach$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Foreach$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Foreach$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Foreach$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Foreach$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Foreach$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Foreach$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Foreach$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Foreach$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Foreach$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Foreach$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Foreach$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Foreach$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Foreach$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Foreach$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Foreach$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.arkondata.slothql.cypher.syntax.GenericCaseSyntax", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$GenericCaseSyntax$.html", "members_object" : [{"label" : "Case", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.GenericCaseSyntax.Case", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$GenericCaseSyntax$.html#Case", "kind" : "object"}, {"label" : "Case", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.GenericCaseSyntax.Case", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$GenericCaseSyntax$.html#Case[A]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "make", "tail" : "(cases: Seq[Case[A]], default: Option[Expr[A]]): Expr[A]", "member" : "com.arkondata.slothql.cypher.syntax.GenericCaseSyntax.make", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$GenericCaseSyntax$.html#make[A](cases:Seq[com.arkondata.slothql.cypher.syntax.GenericCaseSyntax.Case[A]],default:Option[com.arkondata.slothql.cypher.syntax.package.Expr[A]]):com.arkondata.slothql.cypher.syntax.package.Expr[A]", "kind" : "def"}, {"label" : "Builder", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.GenericCaseSyntax.Builder", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$GenericCaseSyntax$.html#Builder[A]extendsAnyRef", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$GenericCaseSyntax$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$GenericCaseSyntax$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$GenericCaseSyntax$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$GenericCaseSyntax$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$GenericCaseSyntax$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$GenericCaseSyntax$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$GenericCaseSyntax$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$GenericCaseSyntax$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$GenericCaseSyntax$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$GenericCaseSyntax$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$GenericCaseSyntax$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$GenericCaseSyntax$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$GenericCaseSyntax$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$GenericCaseSyntax$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$GenericCaseSyntax$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$GenericCaseSyntax$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$GenericCaseSyntax$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$GenericCaseSyntax$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$GenericCaseSyntax$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.arkondata.slothql.cypher.syntax.LiftedMap", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$LiftedMap$.html", "members_object" : [{"label" : "LiftedMapEntry", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.LiftedMap.LiftedMapEntry", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$LiftedMap$.html#LiftedMapEntry", "kind" : "object"}, {"label" : "LiftedMapEntry", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.LiftedMap.LiftedMapEntry", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$LiftedMap$.html#LiftedMapEntryextendsAnyVal", "kind" : "final class"}, {"label" : "apply", "tail" : "(entries: LiftedMapEntry*): LiftedMap", "member" : "com.arkondata.slothql.cypher.syntax.LiftedMap.apply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$LiftedMap$.html#apply(entries:com.arkondata.slothql.cypher.syntax.LiftedMap.LiftedMapEntry*):com.arkondata.slothql.cypher.syntax.package.LiftedMap", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$LiftedMap$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$LiftedMap$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$LiftedMap$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$LiftedMap$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$LiftedMap$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$LiftedMap$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$LiftedMap$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$LiftedMap$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$LiftedMap$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$LiftedMap$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$LiftedMap$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$LiftedMap$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$LiftedMap$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$LiftedMap$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$LiftedMap$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$LiftedMap$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$LiftedMap$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$LiftedMap$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$LiftedMap$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.arkondata.slothql.cypher.syntax.ListOps", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ListOps[A]) => Boolean, msg: => Any): ListOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ListOps[A]) => Boolean): ListOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ListOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ListOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ListOps[A], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ListOps[A], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "single", "tail" : "(f: (CypherFragment.Expr[A]) => CypherFragment.Expr[Boolean]): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.ListOps.single", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#single(f:com.arkondata.slothql.cypher.CypherFragment.Expr[A]=>com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]):com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"label" : "none", "tail" : "(f: (CypherFragment.Expr[A]) => CypherFragment.Expr[Boolean]): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.ListOps.none", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#none(f:com.arkondata.slothql.cypher.CypherFragment.Expr[A]=>com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]):com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"label" : "any", "tail" : "(f: (CypherFragment.Expr[A]) => CypherFragment.Expr[Boolean]): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.ListOps.any", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#any(f:com.arkondata.slothql.cypher.CypherFragment.Expr[A]=>com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]):com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"label" : "all", "tail" : "(f: (CypherFragment.Expr[A]) => CypherFragment.Expr[Boolean]): CypherFragment.Expr[Boolean]", "member" : "com.arkondata.slothql.cypher.syntax.ListOps.all", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#all(f:com.arkondata.slothql.cypher.CypherFragment.Expr[A]=>com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]):com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]", "kind" : "def"}, {"label" : "reduce", "tail" : "(b: CypherFragment.Expr[B])(f: (CypherFragment.Expr[B], CypherFragment.Expr[A]) => CypherFragment.Expr[B]): CypherFragment.Expr[B]", "member" : "com.arkondata.slothql.cypher.syntax.ListOps.reduce", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#reduce[B](b:com.arkondata.slothql.cypher.CypherFragment.Expr[B])(f:(com.arkondata.slothql.cypher.CypherFragment.Expr[B],com.arkondata.slothql.cypher.CypherFragment.Expr[A])=>com.arkondata.slothql.cypher.CypherFragment.Expr[B]):com.arkondata.slothql.cypher.CypherFragment.Expr[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (CypherFragment.Expr[A]) => CypherFragment.Expr[B]): CypherFragment.Expr[List[B]]", "member" : "com.arkondata.slothql.cypher.syntax.ListOps.map", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#map[B](f:com.arkondata.slothql.cypher.CypherFragment.Expr[A]=>com.arkondata.slothql.cypher.CypherFragment.Expr[B]):com.arkondata.slothql.cypher.CypherFragment.Expr[List[B]]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (CypherFragment.Expr[A]) => CypherFragment.Expr[Boolean]): CypherFragment.Expr[List[A]]", "member" : "com.arkondata.slothql.cypher.syntax.ListOps.filter", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#filter(f:com.arkondata.slothql.cypher.CypherFragment.Expr[A]=>com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]):com.arkondata.slothql.cypher.CypherFragment.Expr[List[A]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(f: (CypherFragment.Expr[A]) => CypherFragment.Expr[Boolean]): WithFilter[A]", "member" : "com.arkondata.slothql.cypher.syntax.ListOps.withFilter", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#withFilter(f:com.arkondata.slothql.cypher.CypherFragment.Expr[A]=>com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]):com.arkondata.slothql.cypher.syntax.package.ListOps.WithFilter[A]", "kind" : "def"}, {"label" : "size", "tail" : "(): CypherFragment.Expr[Long]", "member" : "com.arkondata.slothql.cypher.syntax.ListOps.size", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#size:com.arkondata.slothql.cypher.CypherFragment.Expr[Long]", "kind" : "def"}, {"label" : "last", "tail" : "(): CypherFragment.Expr[A]", "member" : "com.arkondata.slothql.cypher.syntax.ListOps.last", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#last:com.arkondata.slothql.cypher.CypherFragment.Expr[A]", "kind" : "def"}, {"label" : "tail", "tail" : "(): CypherFragment.Expr[List[A]]", "member" : "com.arkondata.slothql.cypher.syntax.ListOps.tail", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#tail:com.arkondata.slothql.cypher.CypherFragment.Expr[List[A]]", "kind" : "def"}, {"label" : "head", "tail" : "(): CypherFragment.Expr[A]", "member" : "com.arkondata.slothql.cypher.syntax.ListOps.head", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#head:com.arkondata.slothql.cypher.CypherFragment.Expr[A]", "kind" : "def"}, {"label" : "to", "tail" : "(i: CypherFragment.Expr[I])(arg0: <:<[((I) => Nothing) => Nothing, ((Int) => Nothing with (Long) => Nothing) => Nothing]): CypherFragment.Expr[List[A]]", "member" : "com.arkondata.slothql.cypher.syntax.ListOps.to", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#to[I](i:com.arkondata.slothql.cypher.CypherFragment.Expr[I])(implicitevidence$12:(I=>Nothing)=>Nothing<:<Int=>NothingwithLong=>Nothing=>Nothing):com.arkondata.slothql.cypher.CypherFragment.Expr[List[A]]", "kind" : "def"}, {"label" : "from", "tail" : "(i: CypherFragment.Expr[I])(arg0: <:<[((I) => Nothing) => Nothing, ((Int) => Nothing with (Long) => Nothing) => Nothing]): CypherFragment.Expr[List[A]]", "member" : "com.arkondata.slothql.cypher.syntax.ListOps.from", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#from[I](i:com.arkondata.slothql.cypher.CypherFragment.Expr[I])(implicitevidence$11:(I=>Nothing)=>Nothing<:<Int=>NothingwithLong=>Nothing=>Nothing):com.arkondata.slothql.cypher.CypherFragment.Expr[List[A]]", "kind" : "def"}, {"label" : "slice", "tail" : "(range: Ior[CypherFragment.Expr[I1], CypherFragment.Expr[I2]])(arg0: <:<[((I1) => Nothing) => Nothing, ((Int) => Nothing with (Long) => Nothing) => Nothing], arg1: <:<[((I2) => Nothing) => Nothing, ((Int) => Nothing with (Long) => Nothing) => Nothing]): CypherFragment.Expr[List[A]]", "member" : "com.arkondata.slothql.cypher.syntax.ListOps.slice", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#slice[I1,I2](range:cats.data.Ior[com.arkondata.slothql.cypher.CypherFragment.Expr[I1],com.arkondata.slothql.cypher.CypherFragment.Expr[I2]])(implicitevidence$9:(I1=>Nothing)=>Nothing<:<Int=>NothingwithLong=>Nothing=>Nothing,implicitevidence$10:(I2=>Nothing)=>Nothing<:<Int=>NothingwithLong=>Nothing=>Nothing):com.arkondata.slothql.cypher.CypherFragment.Expr[List[A]]", "kind" : "def"}, {"label" : "slice", "tail" : "(l: CypherFragment.Expr[I1], r: CypherFragment.Expr[I2])(arg0: <:<[((I1) => Nothing) => Nothing, ((Int) => Nothing with (Long) => Nothing) => Nothing], arg1: <:<[((I2) => Nothing) => Nothing, ((Int) => Nothing with (Long) => Nothing) => Nothing]): CypherFragment.Expr[List[A]]", "member" : "com.arkondata.slothql.cypher.syntax.ListOps.slice", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#slice[I1,I2](l:com.arkondata.slothql.cypher.CypherFragment.Expr[I1],r:com.arkondata.slothql.cypher.CypherFragment.Expr[I2])(implicitevidence$7:(I1=>Nothing)=>Nothing<:<Int=>NothingwithLong=>Nothing=>Nothing,implicitevidence$8:(I2=>Nothing)=>Nothing<:<Int=>NothingwithLong=>Nothing=>Nothing):com.arkondata.slothql.cypher.CypherFragment.Expr[List[A]]", "kind" : "def"}, {"label" : "at", "tail" : "(i: CypherFragment.Expr[I])(arg0: <:<[((I) => Nothing) => Nothing, ((Int) => Nothing with (Long) => Nothing) => Nothing]): CypherFragment.Expr[A]", "member" : "com.arkondata.slothql.cypher.syntax.ListOps.at", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#at[I](i:com.arkondata.slothql.cypher.CypherFragment.Expr[I])(implicitevidence$6:(I=>Nothing)=>Nothing<:<Int=>NothingwithLong=>Nothing=>Nothing):com.arkondata.slothql.cypher.CypherFragment.Expr[A]", "kind" : "def"}, {"label" : "++", "tail" : "(that: CypherFragment.Expr[List[A]]): CypherFragment.Expr[List[A]]", "member" : "com.arkondata.slothql.cypher.syntax.ListOps.++", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#++(that:com.arkondata.slothql.cypher.CypherFragment.Expr[List[A]]):com.arkondata.slothql.cypher.CypherFragment.Expr[List[A]]", "kind" : "def"}, {"label" : "concat", "tail" : "(that: CypherFragment.Expr[List[A]]): CypherFragment.Expr[List[A]]", "member" : "com.arkondata.slothql.cypher.syntax.ListOps.concat", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#concat(that:com.arkondata.slothql.cypher.CypherFragment.Expr[List[A]]):com.arkondata.slothql.cypher.CypherFragment.Expr[List[A]]", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.syntax.ListOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "WithFilter", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.ListOps.WithFilter", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps$.html#WithFilter[A]extendsAnyRef", "kind" : "final class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$ListOps.html", "kind" : "class"}, {"name" : "com.arkondata.slothql.cypher.syntax.MapAnyOps", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MapAnyOps[A]) => Boolean, msg: => Any): MapAnyOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MapAnyOps[A]) => Boolean): MapAnyOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): MapAnyOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): MapAnyOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (MapAnyOps[A], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (MapAnyOps[A], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "add", "tail" : "(map: Map[String, CypherFragment.Expr[Any]]): CypherFragment.Expr[Map[String, Any]]", "member" : "com.arkondata.slothql.cypher.syntax.MapAnyOps.add", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#add(map:Map[String,com.arkondata.slothql.cypher.CypherFragment.Expr[Any]]):com.arkondata.slothql.cypher.CypherFragment.Expr[Map[String,Any]]", "kind" : "def"}, {"label" : "add", "tail" : "(entries: (String, CypherFragment.Expr[Any])*): CypherFragment.Expr[Map[String, Any]]", "member" : "com.arkondata.slothql.cypher.syntax.MapAnyOps.add", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#add(entries:(String,com.arkondata.slothql.cypher.CypherFragment.Expr[Any])*):com.arkondata.slothql.cypher.CypherFragment.Expr[Map[String,Any]]", "kind" : "def"}, {"label" : "value", "tail" : "(key: CypherFragment.Expr[String]): CypherFragment.Expr[V]", "member" : "com.arkondata.slothql.cypher.syntax.MapAnyOps.value", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#value[V](key:com.arkondata.slothql.cypher.CypherFragment.Expr[String]):com.arkondata.slothql.cypher.CypherFragment.Expr[V]", "kind" : "def"}, {"label" : "value", "tail" : "(key: String): CypherFragment.Expr[V]", "member" : "com.arkondata.slothql.cypher.syntax.MapAnyOps.value", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#value[V](key:String):com.arkondata.slothql.cypher.CypherFragment.Expr[V]", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.syntax.MapAnyOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapAnyOps.html", "kind" : "class"}, {"name" : "com.arkondata.slothql.cypher.syntax.MapNotAnyOps", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MapNotAnyOps[A]) => Boolean, msg: => Any): MapNotAnyOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MapNotAnyOps[A]) => Boolean): MapNotAnyOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): MapNotAnyOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): MapNotAnyOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (MapNotAnyOps[A], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (MapNotAnyOps[A], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "add", "tail" : "(map: Map[String, CypherFragment.Expr[A]]): CypherFragment.Expr[Map[String, A]]", "member" : "com.arkondata.slothql.cypher.syntax.MapNotAnyOps.add", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#add(map:Map[String,com.arkondata.slothql.cypher.CypherFragment.Expr[A]]):com.arkondata.slothql.cypher.CypherFragment.Expr[Map[String,A]]", "kind" : "def"}, {"label" : "add", "tail" : "(entries: (String, CypherFragment.Expr[A])*): CypherFragment.Expr[Map[String, A]]", "member" : "com.arkondata.slothql.cypher.syntax.MapNotAnyOps.add", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#add(entries:(String,com.arkondata.slothql.cypher.CypherFragment.Expr[A])*):com.arkondata.slothql.cypher.CypherFragment.Expr[Map[String,A]]", "kind" : "def"}, {"label" : "value", "tail" : "(key: CypherFragment.Expr[String]): CypherFragment.Expr[A]", "member" : "com.arkondata.slothql.cypher.syntax.MapNotAnyOps.value", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#value(key:com.arkondata.slothql.cypher.CypherFragment.Expr[String]):com.arkondata.slothql.cypher.CypherFragment.Expr[A]", "kind" : "def"}, {"label" : "value", "tail" : "(key: String): CypherFragment.Expr[A]", "member" : "com.arkondata.slothql.cypher.syntax.MapNotAnyOps.value", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#value(key:String):com.arkondata.slothql.cypher.CypherFragment.Expr[A]", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.syntax.MapNotAnyOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapNotAnyOps.html", "kind" : "class"}, {"name" : "com.arkondata.slothql.cypher.syntax.MapOps", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MapOps[A]) => Boolean, msg: => Any): MapOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MapOps[A]) => Boolean): MapOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): MapOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): MapOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (MapOps[A], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (MapOps[A], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "keys", "tail" : "(): CypherFragment.Expr[List[String]]", "member" : "com.arkondata.slothql.cypher.syntax.MapOps.keys", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html#keys:com.arkondata.slothql.cypher.CypherFragment.Expr[List[String]]", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.syntax.MapOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$MapOps.html", "kind" : "class"}, {"name" : "com.arkondata.slothql.cypher.syntax.Match", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Match$.html", "members_object" : [{"label" : "maybe", "tail" : "(opt: Boolean)(query: (Node) => Query0[R]): Query0[R]", "member" : "com.arkondata.slothql.cypher.syntax.Match.maybe", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Match$.html#maybe[R](opt:Boolean)(query:com.arkondata.slothql.cypher.syntax.package.Node=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]):com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]", "kind" : "macro def"}, {"label" : "optional", "tail" : "(query: (Node) => Query0[R]): Query0[R]", "member" : "com.arkondata.slothql.cypher.syntax.Match.optional", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Match$.html#optional[R](query:com.arkondata.slothql.cypher.syntax.package.Node=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]):com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]", "kind" : "macro def"}, {"label" : "apply", "tail" : "(query: (Node) => Query0[R]): Query0[R]", "member" : "com.arkondata.slothql.cypher.syntax.Match.apply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Match$.html#apply[R](query:com.arkondata.slothql.cypher.syntax.package.Node=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]):com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]", "kind" : "macro def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Match$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Match$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Match$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Match$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Match$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Match$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Match$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Match$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Match$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Match$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Match$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Match$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Match$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Match$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Match$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Match$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Match$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Match$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Match$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.arkondata.slothql.cypher.syntax.Merge", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Merge$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Merge$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Merge$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Merge$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Merge$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Merge$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Merge$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Merge$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Merge$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Merge$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Merge$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Merge$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Merge$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Merge$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Merge$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Merge$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Merge$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Merge$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Merge$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Merge$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.arkondata.slothql.cypher.syntax.Neo4jBuiltIn", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Neo4jBuiltIn$.html", "members_object" : [{"label" : "timestamp", "tail" : ": Expr[Long]", "member" : "com.arkondata.slothql.cypher.syntax.Neo4jBuiltIn.timestamp", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Neo4jBuiltIn$.html#timestamp:com.arkondata.slothql.cypher.syntax.package.Expr[Long]", "kind" : "lazy val"}, {"label" : "randomUUID", "tail" : ": Expr[String]", "member" : "com.arkondata.slothql.cypher.syntax.Neo4jBuiltIn.randomUUID", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Neo4jBuiltIn$.html#randomUUID:com.arkondata.slothql.cypher.syntax.package.Expr[String]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Neo4jBuiltIn$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Neo4jBuiltIn$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Neo4jBuiltIn$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Neo4jBuiltIn$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Neo4jBuiltIn$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Neo4jBuiltIn$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Neo4jBuiltIn$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Neo4jBuiltIn$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Neo4jBuiltIn$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Neo4jBuiltIn$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Neo4jBuiltIn$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Neo4jBuiltIn$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Neo4jBuiltIn$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Neo4jBuiltIn$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Neo4jBuiltIn$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Neo4jBuiltIn$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Neo4jBuiltIn$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Neo4jBuiltIn$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Neo4jBuiltIn$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.arkondata.slothql.cypher.syntax.Node", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Node$.html", "members_object" : [{"label" : "unapplySeq", "tail" : "(n: Node): Option[Seq[Any]]", "member" : "com.arkondata.slothql.cypher.syntax.Node.unapplySeq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Node$.html#unapplySeq(n:com.arkondata.slothql.cypher.syntax.package.Node):Option[Seq[Any]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Node$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Node$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Node$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Node$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Node$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Node$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Node$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Node$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Node$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Node$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Node$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Node$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Node$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Node$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Node$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Node$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Node$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Node$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Node$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.arkondata.slothql.cypher.syntax.parameterized", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$parameterized$.html", "members_object" : [{"label" : "apply", "tail" : "(f: Any): ParameterizedCypherQuery[_, _]", "member" : "com.arkondata.slothql.cypher.ParameterizedCypherQuery.Build.apply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$parameterized$.html#apply(f:Any):com.arkondata.slothql.cypher.ParameterizedCypherQuery[_,_]", "kind" : "macro def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$parameterized$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$parameterized$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$parameterized$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$parameterized$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$parameterized$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$parameterized$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$parameterized$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$parameterized$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$parameterized$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$parameterized$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$parameterized$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$parameterized$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$parameterized$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$parameterized$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$parameterized$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$parameterized$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$parameterized$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$parameterized$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$parameterized$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.arkondata.slothql.cypher.syntax.Rel", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Rel$.html", "members_object" : [{"label" : "unapplySeq", "tail" : "(r: Rel): Option[Seq[Any]]", "member" : "com.arkondata.slothql.cypher.syntax.Rel.unapplySeq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Rel$.html#unapplySeq(r:com.arkondata.slothql.cypher.syntax.package.Rel):Option[Seq[Any]]", "kind" : "def"}, {"label" : "Outgoing", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.Rel.Outgoing", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Rel$.html#Outgoing=com.arkondata.slothql.cypher.CypherFragment.Pattern.Rel.Outgoing.type", "kind" : "type"}, {"label" : "Incoming", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.Rel.Incoming", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Rel$.html#Incoming=com.arkondata.slothql.cypher.CypherFragment.Pattern.Rel.Incoming.type", "kind" : "type"}, {"label" : "Direction", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.Rel.Direction", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Rel$.html#Direction=com.arkondata.slothql.cypher.CypherFragment.Pattern.Rel.Direction", "kind" : "type"}, {"label" : "Aux", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.Rel.Aux", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Rel$.html#Aux[D<:com.arkondata.slothql.cypher.syntax.package.Rel.Direction]=com.arkondata.slothql.cypher.syntax.package.Rel{typeDir=D}", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Rel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Rel$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Rel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Rel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Rel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Rel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Rel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Rel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Rel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Rel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Rel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Rel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Rel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Rel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Rel$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Rel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Rel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Rel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Rel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.arkondata.slothql.cypher.syntax.SetPropOps", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SetPropOps) => Boolean, msg: => Any): SetPropOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SetPropOps) => Boolean): SetPropOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): SetPropOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SetPropOps", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SetPropOps, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SetPropOps, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "setProp", "tail" : "(): set.type", "member" : "com.arkondata.slothql.cypher.syntax.SetPropOps.setProp", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#setProp:SetPropOps.this.set.type", "kind" : "def"}, {"label" : "set", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.SetPropOps.set", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#set", "kind" : "object"}, {"member" : "com.arkondata.slothql.cypher.syntax.SetPropOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SetPropOps.html", "kind" : "class"}, {"name" : "com.arkondata.slothql.cypher.syntax.SimpleCaseExprOps", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SimpleCaseExprOps[A]) => Boolean, msg: => Any): SimpleCaseExprOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SimpleCaseExprOps[A]) => Boolean): SimpleCaseExprOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): SimpleCaseExprOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SimpleCaseExprOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SimpleCaseExprOps[A], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SimpleCaseExprOps[A], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "when", "tail" : "(case0: Case[A, B], cases: Case[A, B]*): Builder[A, B]", "member" : "com.arkondata.slothql.cypher.syntax.SimpleCaseExprOps.when", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#when[B](case0:com.arkondata.slothql.cypher.syntax.package.SimpleCaseExprOps.Case[A,B],cases:com.arkondata.slothql.cypher.syntax.package.SimpleCaseExprOps.Case[A,B]*):com.arkondata.slothql.cypher.syntax.package.SimpleCaseExprOps.Builder[A,B]", "kind" : "def"}, {"label" : "whenUnsafe", "tail" : "(case0: Case[A, B], cases: Case[A, B]*): Expr[B]", "member" : "com.arkondata.slothql.cypher.syntax.SimpleCaseExprOps.whenUnsafe", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#whenUnsafe[B](case0:com.arkondata.slothql.cypher.syntax.package.SimpleCaseExprOps.Case[A,B],cases:com.arkondata.slothql.cypher.syntax.package.SimpleCaseExprOps.Case[A,B]*):com.arkondata.slothql.cypher.syntax.package.Expr[B]", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.syntax.SimpleCaseExprOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Case", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.SimpleCaseExprOps.Case", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps$.html#Case", "kind" : "object"}, {"label" : "Case", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.SimpleCaseExprOps.Case", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps$.html#Case[A,B]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "make", "tail" : "(value: Expr[A], cases: Seq[Case[A, B]], default: Option[Expr[B]]): Expr[B]", "member" : "com.arkondata.slothql.cypher.syntax.SimpleCaseExprOps.make", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps$.html#make[A,B](value:com.arkondata.slothql.cypher.syntax.package.Expr[A],cases:Seq[com.arkondata.slothql.cypher.syntax.SimpleCaseExprOps.Case[A,B]],default:Option[com.arkondata.slothql.cypher.syntax.package.Expr[B]]):com.arkondata.slothql.cypher.syntax.package.Expr[B]", "kind" : "def"}, {"label" : "Builder", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.SimpleCaseExprOps.Builder", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps$.html#Builder[A,B]extendsAnyRef", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$SimpleCaseExprOps.html", "kind" : "class"}, {"name" : "com.arkondata.slothql.cypher.syntax.UnionOps", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (UnionOps[A]) => Boolean, msg: => Any): UnionOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (UnionOps[A]) => Boolean): UnionOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): UnionOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): UnionOps[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (UnionOps[A], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (UnionOps[A], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "unionAll", "tail" : "(q2: Query0[A]): CypherFragment.Query[A]", "member" : "com.arkondata.slothql.cypher.syntax.UnionOps.unionAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#unionAll(q2:com.arkondata.slothql.cypher.CypherFragment.Query.Query0[A]):com.arkondata.slothql.cypher.CypherFragment.Query[A]", "kind" : "def"}, {"label" : "union", "tail" : "(q2: Query0[A]): CypherFragment.Query[A]", "member" : "com.arkondata.slothql.cypher.syntax.UnionOps.union", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#union(q2:com.arkondata.slothql.cypher.CypherFragment.Query.Query0[A]):com.arkondata.slothql.cypher.CypherFragment.Query[A]", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.syntax.UnionOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$UnionOps.html", "kind" : "class"}, {"name" : "com.arkondata.slothql.cypher.syntax.Unwind", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Unwind$.html", "members_object" : [{"label" : "apply", "tail" : "(list: CypherFragment.Expr[List[A]])(func: (CypherFragment.Expr[A]) => Query0[R]): Query0[R]", "member" : "com.arkondata.slothql.cypher.syntax.Unwind.apply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Unwind$.html#apply[A,R](list:com.arkondata.slothql.cypher.CypherFragment.Expr[List[A]])(func:com.arkondata.slothql.cypher.CypherFragment.Expr[A]=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]):com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]", "kind" : "macro def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Unwind$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Unwind$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Unwind$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Unwind$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Unwind$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Unwind$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Unwind$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Unwind$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Unwind$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Unwind$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Unwind$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Unwind$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Unwind$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Unwind$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Unwind$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Unwind$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Unwind$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Unwind$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Unwind$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.arkondata.slothql.cypher.syntax.Update", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Update$.html", "members_object" : [{"label" : "apply", "tail" : "(prop: Prop, props: Prop*)(res: Query[R]): Query[R]", "member" : "com.arkondata.slothql.cypher.syntax.Update.apply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Update$.html#apply[R](prop:com.arkondata.slothql.cypher.syntax.Update.Prop,props:com.arkondata.slothql.cypher.syntax.Update.Prop*)(res:com.arkondata.slothql.cypher.syntax.package.Query[R]):com.arkondata.slothql.cypher.syntax.package.Query[R]", "kind" : "def"}, {"label" : "Prop", "tail" : "", "member" : "com.arkondata.slothql.cypher.syntax.Update.Prop", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Update$.html#Prop=com.arkondata.slothql.cypher.CypherFragment.Clause.SetProps.One", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Update$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Update$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Update$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Update$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Update$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Update$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Update$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Update$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Update$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Update$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Update$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Update$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Update$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Update$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Update$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Update$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Update$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Update$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$Update$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.arkondata.slothql.cypher.syntax.With", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html", "members_object" : [{"label" : "apply", "tail" : "(wildcard: **.type, t1: CypherFragment.Expr[T1], t2: CypherFragment.Expr[T2])(query: (CypherFragment.Expr[T1], CypherFragment.Expr[T2]) => Query0[R]): Query0[R]", "member" : "com.arkondata.slothql.cypher.syntax.With.apply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#apply[T1,T2,R](wildcard:com.arkondata.slothql.cypher.syntax.package.**.type,t1:com.arkondata.slothql.cypher.CypherFragment.Expr[T1],t2:com.arkondata.slothql.cypher.CypherFragment.Expr[T2])(query:(com.arkondata.slothql.cypher.CypherFragment.Expr[T1],com.arkondata.slothql.cypher.CypherFragment.Expr[T2])=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]):com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]", "kind" : "macro def"}, {"label" : "apply", "tail" : "(t1: CypherFragment.Expr[T1], t2: CypherFragment.Expr[T2])(query: (CypherFragment.Expr[T1], CypherFragment.Expr[T2]) => Query0[R]): Query0[R]", "member" : "com.arkondata.slothql.cypher.syntax.With.apply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#apply[T1,T2,R](t1:com.arkondata.slothql.cypher.CypherFragment.Expr[T1],t2:com.arkondata.slothql.cypher.CypherFragment.Expr[T2])(query:(com.arkondata.slothql.cypher.CypherFragment.Expr[T1],com.arkondata.slothql.cypher.CypherFragment.Expr[T2])=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]):com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]", "kind" : "macro def"}, {"label" : "apply", "tail" : "(wildcard: **.type, t1: CypherFragment.Expr[T1])(query: (CypherFragment.Expr[T1]) => Query0[R]): Query0[R]", "member" : "com.arkondata.slothql.cypher.syntax.With.apply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#apply[T1,R](wildcard:com.arkondata.slothql.cypher.syntax.package.**.type,t1:com.arkondata.slothql.cypher.CypherFragment.Expr[T1])(query:com.arkondata.slothql.cypher.CypherFragment.Expr[T1]=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]):com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]", "kind" : "macro def"}, {"label" : "apply", "tail" : "(t1: CypherFragment.Expr[T1])(query: (CypherFragment.Expr[T1]) => Query0[R]): Query0[R]", "member" : "com.arkondata.slothql.cypher.syntax.With.apply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#apply[T1,R](t1:com.arkondata.slothql.cypher.CypherFragment.Expr[T1])(query:com.arkondata.slothql.cypher.CypherFragment.Expr[T1]=>com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]):com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]", "kind" : "macro def"}, {"label" : "apply", "tail" : "(wildcard: **.type)(query: Query0[R]): Query0[R]", "member" : "com.arkondata.slothql.cypher.syntax.With.apply", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#apply[R](wildcard:com.arkondata.slothql.cypher.syntax.package.**.type)(query:com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]):com.arkondata.slothql.cypher.CypherFragment.Query.Query0[R]", "kind" : "macro def"}, {"label" : "limit", "tail" : "(n: Input[Long]): Nothing", "member" : "com.arkondata.slothql.cypher.syntax.With.limit", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#limit(n:com.arkondata.slothql.cypher.CypherFragment.Expr.Input[Long]):Nothing", "kind" : "def"}, {"label" : "skip", "tail" : "(n: Input[Long]): Nothing", "member" : "com.arkondata.slothql.cypher.syntax.With.skip", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#skip(n:com.arkondata.slothql.cypher.CypherFragment.Expr.Input[Long]):Nothing", "kind" : "def"}, {"label" : "orderBy", "tail" : "(seq: Seq[(CypherFragment.Expr[_], Order)]): Nothing", "member" : "com.arkondata.slothql.cypher.syntax.With.orderBy", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#orderBy(seq:Seq[(com.arkondata.slothql.cypher.CypherFragment.Expr[_],com.arkondata.slothql.cypher.CypherFragment.Return.Order)]):Nothing", "kind" : "def"}, {"label" : "orderBy", "tail" : "(expr: CypherFragment.Expr[_], ord: (Order.type) => Order): Nothing", "member" : "com.arkondata.slothql.cypher.syntax.With.orderBy", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#orderBy(expr:com.arkondata.slothql.cypher.CypherFragment.Expr[_],ord:com.arkondata.slothql.cypher.CypherFragment.Return.Order.type=>com.arkondata.slothql.cypher.CypherFragment.Return.Order):Nothing", "kind" : "def"}, {"label" : "orderBy", "tail" : "(expr: CypherFragment.Expr[_], ord: Order): Nothing", "member" : "com.arkondata.slothql.cypher.syntax.With.orderBy", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#orderBy(expr:com.arkondata.slothql.cypher.CypherFragment.Expr[_],ord:com.arkondata.slothql.cypher.CypherFragment.Return.Order):Nothing", "kind" : "def"}, {"label" : "distinct", "tail" : "(boolean: Boolean): Nothing", "member" : "com.arkondata.slothql.cypher.syntax.With.distinct", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#distinct(boolean:Boolean):Nothing", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Nothing", "member" : "com.arkondata.slothql.cypher.syntax.With.distinct", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#distinct:Nothing", "kind" : "def"}, {"label" : "where", "tail" : "(cond: CypherFragment.Expr[Boolean]): Nothing", "member" : "com.arkondata.slothql.cypher.syntax.With.where", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#where(cond:com.arkondata.slothql.cypher.CypherFragment.Expr[Boolean]):Nothing", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/syntax\/package$$With$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.arkondata.slothql.neo4j" : [{"name" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Neo4jCypherTransactor[F]) => Boolean, msg: => Any): Neo4jCypherTransactor[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Neo4jCypherTransactor[F]) => Boolean): Neo4jCypherTransactor[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Neo4jCypherTransactor[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Neo4jCypherTransactor[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Neo4jCypherTransactor[F], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Neo4jCypherTransactor[F], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "Neo4jOps", "tail" : "", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.Syntax.Neo4jOps", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$$Syntax.html#Neo4jOpsextendsSyntax.this.Ops", "kind" : "class"}, {"label" : "Ops", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherTransactor.Syntax.Ops", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$$Syntax.html#OpsextendsAnyRef", "kind" : "class"}, {"label" : "readRecord", "tail" : "(record: Record, reader: Reader[A]): F[A]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.readRecord", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#readRecord[A](record:org.neo4j.driver.Record,reader:Neo4jCypherTransactor.this.Reader[A]):F[A]", "kind" : "def"}, {"label" : "runningQuery", "tail" : "(result: Result, stream: Stream[F, A]): Stream[F, A]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.runningQuery", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#runningQuery[A](result:org.neo4j.driver.Result,stream:fs2.Stream[F,A]):fs2.Stream[F,A]", "kind" : "def"}, {"label" : "runQuery0", "tail" : "(tx: Transaction, q: Prepared[_]): F[Result]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.runQuery0", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#runQuery0(tx:org.neo4j.driver.Transaction,q:com.arkondata.slothql.cypher.CypherStatement.Prepared[_]):F[org.neo4j.driver.Result]", "kind" : "def"}, {"label" : "runQuery", "tail" : "(blocker: Blocker, q: Prepared[A], reader: Reader[A])(tx: Transaction): Stream[F, A]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.runQuery", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#runQuery[A](blocker:cats.effect.Blocker,q:com.arkondata.slothql.cypher.CypherStatement.Prepared[A],reader:Neo4jCypherTransactor.this.Reader[A])(tx:org.neo4j.driver.Transaction):fs2.Stream[F,A]", "kind" : "def"}, {"label" : "runGather", "tail" : "(blocker: Blocker, g: Op[B])(tx: Transaction): Out[Out[A]]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.runGather", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#runGather[A,B](blocker:cats.effect.Blocker,g:Neo4jCypherTransactor.this.Op[B])(tx:org.neo4j.driver.Transaction):Neo4jCypherTransactor.this.Out[Neo4jCypherTransactor.this.Out[A]]", "kind" : "def"}, {"label" : "runUnwind", "tail" : "(out: Out[A])(tx: Transaction): Out[A]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.runUnwind", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#runUnwind[A](out:Neo4jCypherTransactor.this.Out[A])(tx:org.neo4j.driver.Transaction):Neo4jCypherTransactor.this.Out[A]", "kind" : "def"}, {"label" : "runOperation", "tail" : "(blocker: Blocker, op: Op[A]): OutT[A]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.runOperation", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#runOperation[A](blocker:cats.effect.Blocker,op:Neo4jCypherTransactor.this.Op[A]):Neo4jCypherTransactor.this.OutT[A]", "kind" : "def"}, {"label" : "outTMonad", "tail" : ": Monad[OutT]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.outTMonad", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#outTMonad:cats.Monad[Neo4jCypherTransactor.this.OutT]", "kind" : "implicit lazy val"}, {"label" : "OutT", "tail" : "", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.OutT", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#OutT[R]=org.neo4j.driver.Transaction=>Neo4jCypherTransactor.this.Out[R]", "kind" : "type"}, {"label" : "readTxAsResource", "tail" : "(txVar: MVar[F, Transaction]): Resource[F, Transaction]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.readTxAsResource", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#readTxAsResource(txVar:cats.effect.concurrent.MVar[F,org.neo4j.driver.Transaction]):cats.effect.Resource[F,org.neo4j.driver.Transaction]", "kind" : "def"}, {"label" : "backgroundWorkResource", "tail" : "(work: F[Unit]): Resource[F, F[Unit]]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.backgroundWorkResource", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#backgroundWorkResource(work:F[Unit]):cats.effect.Resource[F,F[Unit]]", "kind" : "def"}, {"label" : "closeTransaction", "tail" : "(tx: Transaction): F[Unit]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.closeTransaction", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#closeTransaction(tx:org.neo4j.driver.Transaction):F[Unit]", "kind" : "def"}, {"label" : "rollbackTransaction", "tail" : "(tx: Transaction): F[Unit]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.rollbackTransaction", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#rollbackTransaction(tx:org.neo4j.driver.Transaction):F[Unit]", "kind" : "def"}, {"label" : "commitTransaction", "tail" : "(tx: Transaction): F[Unit]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.commitTransaction", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#commitTransaction(tx:org.neo4j.driver.Transaction):F[Unit]", "kind" : "def"}, {"label" : "closeLockMVarResource", "tail" : "(): Resource[F, MVar[F, Option[Throwable]]]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.closeLockMVarResource", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#closeLockMVarResource:cats.effect.Resource[F,cats.effect.concurrent.MVar[F,Option[Throwable]]]", "kind" : "def"}, {"label" : "execLockMVarResource", "tail" : "(lock1: MVar[F, Option[Throwable]]): Resource[F, MVar[F, Boolean]]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.execLockMVarResource", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#execLockMVarResource(lock1:cats.effect.concurrent.MVar[F,Option[Throwable]]):cats.effect.Resource[F,cats.effect.concurrent.MVar[F,Boolean]]", "kind" : "def"}, {"label" : "transactionMVarResource", "tail" : "(): Resource[F, MVar[F, Transaction]]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.transactionMVarResource", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#transactionMVarResource:cats.effect.Resource[F,cats.effect.concurrent.MVar[F,org.neo4j.driver.Transaction]]", "kind" : "def"}, {"label" : "transactionResource", "tail" : "(run: (TransactionWork[Unit]) => Unit): Resource[F, Transaction]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.transactionResource", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#transactionResource(run:org.neo4j.driver.TransactionWork[Unit]=>Unit):cats.effect.Resource[F,org.neo4j.driver.Transaction]", "kind" : "def"}, {"label" : "sessionResource", "tail" : "(): Resource[F, Session]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.sessionResource", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#sessionResource:cats.effect.Resource[F,org.neo4j.driver.Session]", "kind" : "def"}, {"label" : "blockerResource", "tail" : "(): Resource[F, Blocker]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.blockerResource", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#blockerResource:cats.effect.Resource[F,cats.effect.Blocker]", "kind" : "def"}, {"label" : "run", "tail" : "(tx: Tx[A], txWork0: (Session) => (TransactionWork[B]) => B forSome {type B}): Out[A]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.run", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#run[A](tx:Neo4jCypherTransactor.this.Tx[A],txWork0:org.neo4j.driver.Session=>(org.neo4j.driver.TransactionWork[B]=>BforSome{typeB})):Neo4jCypherTransactor.this.Out[A]", "kind" : "def"}, {"label" : "runWrite", "tail" : "(tx: Tx[A]): Out[A]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.runWrite", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#runWrite[A](tx:Neo4jCypherTransactor.this.Tx[A]):Neo4jCypherTransactor.this.Out[A]", "kind" : "def"}, {"label" : "runRead", "tail" : "(tx: Tx[A]): Out[A]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.runRead", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#runRead[A](tx:Neo4jCypherTransactor.this.Tx[A]):Neo4jCypherTransactor.this.Out[A]", "kind" : "def"}, {"label" : "readers", "tail" : "", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.readers", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#readers", "kind" : "object"}, {"label" : "Op", "tail" : "", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.Op", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#Op[R]=com.arkondata.slothql.cypher.CypherTransactor.Operation[org.neo4j.driver.Record,Neo4jCypherTransactor.this.Out,R]", "kind" : "type"}, {"label" : "Out", "tail" : "", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.Out", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#Out[R]=fs2.Stream[F,R]", "kind" : "type"}, {"label" : "Tx", "tail" : "", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.Tx", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#Tx[R]=com.arkondata.slothql.cypher.CypherTransactor.Tx[F,org.neo4j.driver.Record,[β$1$]fs2.Stream[F,β$1$],R]", "kind" : "type"}, {"member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor#<init>", "error" : "unsupported entity"}, {"label" : "cs", "tail" : ": ContextShift[F]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.cs", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#cs:cats.effect.ContextShift[F]", "kind" : "implicit val"}, {"label" : "ce", "tail" : ": ConcurrentEffect[F]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.ce", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#ce:cats.effect.ConcurrentEffect[F]", "kind" : "implicit val"}, {"label" : "session", "tail" : ": F[Session]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.session", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#session:F[org.neo4j.driver.Session]", "kind" : "val"}, {"label" : "ops", "tail" : ": Neo4jOps", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.Syntax.ops", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#ops:Syntax.this.Neo4jOps", "kind" : "val"}, {"label" : "gatherStream", "tail" : "(to: ~>[[γ$6$]CompileOps[F, F, γ$6$], [A]F[G[A]]]): ~>[Neo4jCypherTransactor.Tx, [A]FreeT[[γ$0$]Operation[Record, [β$3$]Stream[F, β$3$], γ$0$], F, G[A]]]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.Syntax.gatherStream", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#gatherStream[G[_]](to:[γ$6$]fs2.Stream.CompileOps[F,F,γ$6$]~>[A]F[G[A]]):Syntax.this.Tx~>[A]cats.free.FreeT[[γ$0$]com.arkondata.slothql.cypher.CypherTransactor.Operation[org.neo4j.driver.Record,[β$3$]fs2.Stream[F,β$3$],γ$0$],F,G[A]]", "kind" : "def"}, {"label" : "TxG", "tail" : "", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.Syntax.TxG", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#TxG[G[_],A]=com.arkondata.slothql.cypher.CypherTransactor.Tx[F,org.neo4j.driver.Record,[β$5$]fs2.Stream[F,β$5$],G[A]]", "kind" : "type"}, {"label" : "TxC", "tail" : "", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.Syntax.TxC", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#TxC[A]=com.arkondata.slothql.cypher.CypherTransactor.TxC[F,org.neo4j.driver.Record,[β$4$]fs2.Stream[F,β$4$],A]", "kind" : "type"}, {"label" : "error", "tail" : "(err: Throwable)(M: MonadError[F, Throwable]): Neo4jCypherTransactor.Tx[A]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.Syntax.error", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#error[A](err:Throwable)(implicitM:cats.MonadError[F,Throwable]):Syntax.this.Tx[A]", "kind" : "def"}, {"label" : "error", "tail" : "(err: Err)(M: MonadError[F, Err]): Neo4jCypherTransactor.Tx[A]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.Syntax.error", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#error[Err,A](err:Err)(implicitM:cats.MonadError[F,Err]):Syntax.this.Tx[A]", "kind" : "def"}, {"label" : "zip3", "tail" : "(x: Neo4jCypherTransactor.Tx[X], y: Neo4jCypherTransactor.Tx[Y], z: Neo4jCypherTransactor.Tx[Z]): Neo4jCypherTransactor.Tx[(X, Y, Z)]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.Syntax.zip3", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#zip3[X,Y,Z](x:Syntax.this.Tx[X],y:Syntax.this.Tx[Y],z:Syntax.this.Tx[Z]):Syntax.this.Tx[(X,Y,Z)]", "kind" : "def"}, {"label" : "zip", "tail" : "(x: Neo4jCypherTransactor.Tx[X], y: Neo4jCypherTransactor.Tx[Y]): Neo4jCypherTransactor.Tx[(X, Y)]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.Syntax.zip", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#zip[X,Y](x:Syntax.this.Tx[X],y:Syntax.this.Tx[Y]):Syntax.this.Tx[(X,Y)]", "kind" : "def"}, {"label" : "product", "tail" : "(x: Neo4jCypherTransactor.Tx[X], y: Neo4jCypherTransactor.Tx[Y]): Neo4jCypherTransactor.Tx[(X, Y)]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.Syntax.product", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#product[X,Y](x:Syntax.this.Tx[X],y:Syntax.this.Tx[Y]):Syntax.this.Tx[(X,Y)]", "kind" : "def"}, {"label" : "liftTx", "tail" : "(): ~>[[A]F[FreeT[[γ$0$]Operation[Record, [β$3$]Stream[F, β$3$], γ$0$], F, A]], Neo4jCypherTransactor.Tx]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.Syntax.liftTx", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#liftTx:[A]F[cats.free.FreeT[[γ$0$]com.arkondata.slothql.cypher.CypherTransactor.Operation[Src,C,γ$0$],F,A]]~>Syntax.this.Tx", "kind" : "def"}, {"label" : "liftF", "tail" : "(): ~>[F, Neo4jCypherTransactor.Tx]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.Syntax.liftF", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#liftF:F~>Syntax.this.Tx", "kind" : "def"}, {"label" : "const", "tail" : "(): ~>[Id, Neo4jCypherTransactor.Tx]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.Syntax.const", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#const:cats.Id~>Syntax.this.Tx", "kind" : "def"}, {"label" : "nothing", "tail" : "(): Neo4jCypherTransactor.Tx[R]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.Syntax.nothing", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#nothing[R]:Syntax.this.Tx[R]", "kind" : "def"}, {"label" : "unwindTx", "tail" : "(): ~>[[A]Stream[F, FreeT[[γ$0$]Operation[Record, [β$3$]Stream[F, β$3$], γ$0$], F, A]], Neo4jCypherTransactor.Tx]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.Syntax.unwindTx", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#unwindTx:[A]C[cats.free.FreeT[[γ$0$]com.arkondata.slothql.cypher.CypherTransactor.Operation[Src,C,γ$0$],F,A]]~>Syntax.this.Tx", "kind" : "def"}, {"label" : "unwind", "tail" : "(): ~>[[β$3$]Stream[F, β$3$], Neo4jCypherTransactor.Tx]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.Syntax.unwind", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#unwind:C~>Syntax.this.Tx", "kind" : "def"}, {"label" : "gather", "tail" : "(): ~>[Neo4jCypherTransactor.Tx, [δ$37$]FreeT[[γ$0$]Operation[Record, [β$3$]Stream[F, β$3$], γ$0$], F, Stream[F, δ$37$]]]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.Syntax.gather", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#gather:Syntax.this.Tx~>[δ$37$]cats.free.FreeT[[γ$0$]com.arkondata.slothql.cypher.CypherTransactor.Operation[Src,C,γ$0$],F,C[δ$37$]]", "kind" : "def"}, {"label" : "query", "tail" : "(q: ParameterizedCypherQuery[Params, R])(read: Reader[R]): Apply[Params, R, Neo4jCypherTransactor.Tx[R]]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.Syntax.query", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#query[Params<:shapeless.HList,R](q:com.arkondata.slothql.cypher.ParameterizedCypherQuery[Params,R])(implicitread:Syntax.this.Reader[R]):com.arkondata.slothql.cypher.ParameterizedCypherQuery.Apply[Params,R,Syntax.this.Tx[R]]", "kind" : "def"}, {"label" : "query", "tail" : "(s: Prepared[R])(read: Reader[R]): Neo4jCypherTransactor.Tx[R]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.Syntax.query", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#query[R](s:com.arkondata.slothql.cypher.CypherStatement.Prepared[R])(implicitread:Syntax.this.Reader[R]):Syntax.this.Tx[R]", "kind" : "def"}, {"label" : "query", "tail" : "(s: Complete[R])(read: Reader[R]): Neo4jCypherTransactor.Tx[R]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.Syntax.query", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#query[R](s:com.arkondata.slothql.cypher.CypherStatement.Complete[R])(implicitread:Syntax.this.Reader[R]):Syntax.this.Tx[R]", "kind" : "def"}, {"label" : "query", "tail" : "(q: Query[R])(gen: Gen, read: Reader[R]): Neo4jCypherTransactor.Tx[R]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.Syntax.query", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#query[R](q:com.arkondata.slothql.cypher.CypherFragment.Query[R])(implicitgen:com.arkondata.slothql.cypher.CypherStatement.Gen,implicitread:Syntax.this.Reader[R]):Syntax.this.Tx[R]", "kind" : "def"}, {"label" : "Reader", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherTransactor.Syntax.Reader", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#Reader[R]=com.arkondata.slothql.cypher.CypherTransactor.Reader[Src,R]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Syntax", "tail" : "", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.Syntax", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#Syntax[F[_]]extendsCypherTransactor.Syntax[F,org.neo4j.driver.Record,[β$3$]fs2.Stream[F,β$3$]]", "kind" : "class"}, {"label" : "Readers", "tail" : "", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.Readers", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#Readers", "kind" : "object"}, {"label" : "Readers", "tail" : "", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.Readers", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#ReadersextendsNeo4jCypherTransactor.DefaultValueReaders", "kind" : "trait"}, {"label" : "neo4jRecordReader", "tail" : "(r: RootReader[A]): Reader[Record, A]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.neo4jRecordReader", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#neo4jRecordReader[A](implicitr:com.arkondata.slothql.neo4j.Neo4jCypherTransactor.RootReader[A]):com.arkondata.slothql.cypher.CypherTransactor.Reader[org.neo4j.driver.Record,A]", "kind" : "implicit def"}, {"label" : "DefaultValueReaders", "tail" : "", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.DefaultValueReaders", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#DefaultValueReadersextendsNeo4jCypherTransactor.AnyValueReader", "kind" : "trait"}, {"label" : "AnyValueReader", "tail" : "", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.AnyValueReader", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#AnyValueReaderextendsAnyRef", "kind" : "trait"}, {"label" : "RootReader", "tail" : "", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.RootReader", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#RootReader", "kind" : "object"}, {"label" : "RootReader", "tail" : "", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.RootReader", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#RootReader[A]extendsCypherTransactor.Reader[Seq[org.neo4j.driver.Value],A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "ValueReader", "tail" : "", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.ValueReader", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#ValueReader", "kind" : "object"}, {"label" : "ValueReader", "tail" : "", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.ValueReader", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#ValueReader[A]extendsCypherTransactor.Reader[org.neo4j.driver.Value,A]", "kind" : "trait"}, {"label" : "apply", "tail" : "(driver: Driver)(arg0: Monad[F], arg1: ConcurrentEffect[F], arg2: ContextShift[F]): Neo4jCypherTransactor[F]", "member" : "com.arkondata.slothql.neo4j.Neo4jCypherTransactor.apply", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#apply[F[_]](driver:org.neo4j.driver.Driver)(implicitevidence$1:cats.Monad[F],implicitevidence$2:cats.effect.ConcurrentEffect[F],implicitevidence$3:cats.effect.ContextShift[F]):com.arkondata.slothql.neo4j.Neo4jCypherTransactor[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/neo4j\/Neo4jCypherTransactor.html", "kind" : "class"}], "com.arkondata.slothql.cypher" : [{"name" : "com.arkondata.slothql.cypher.CypherFragment", "object" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html", "members_object" : [{"label" : "escapeName", "tail" : "(name: String): String", "member" : "com.arkondata.slothql.cypher.CypherFragment.escapeName", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#escapeName(name:String):String", "kind" : "def"}, {"label" : "Pattern", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherFragment.Pattern", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#Pattern", "kind" : "object"}, {"label" : "Pattern", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherFragment.Pattern", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#PatternextendsCypherFragment", "kind" : "sealed trait"}, {"label" : "PatternTuple", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherFragment.PatternTuple", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#PatternTuple=cats.data.NonEmptyList[com.arkondata.slothql.cypher.CypherFragment.Pattern]", "kind" : "type"}, {"label" : "Clause", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherFragment.Clause", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#Clause", "kind" : "object"}, {"label" : "Clause", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherFragment.Clause", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#ClauseextendsCypherFragment", "kind" : "sealed trait"}, {"label" : "Return", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherFragment.Return", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#Return", "kind" : "object"}, {"label" : "Return", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherFragment.Return", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#Return[+A]extendsCypherFragment", "kind" : "sealed trait"}, {"label" : "Query", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherFragment.Query", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#Query", "kind" : "object"}, {"label" : "Query", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherFragment.Query", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#Query[+A]extendsCypherFragment", "kind" : "sealed trait"}, {"label" : "Expr", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherFragment.Expr", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#Expr", "kind" : "object"}, {"label" : "Expr", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherFragment.Expr", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#Expr[+T]extendsCypherFragment", "kind" : "sealed trait"}, {"label" : "Aux", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherFragment.Aux", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#Aux[+S<:com.arkondata.slothql.cypher.CypherStatement]=com.arkondata.slothql.cypher.CypherFragment{typeStatement<:S}", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html", "kind" : "trait", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherFragment) => Boolean, msg: => Any): CypherFragment", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherFragment) => Boolean): CypherFragment", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): CypherFragment", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CypherFragment", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CypherFragment, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CypherFragment, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toCypher", "tail" : "(gen: Gen): (Statement, Gen)", "member" : "com.arkondata.slothql.cypher.CypherFragment.toCypher", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#toCypher(gen:com.arkondata.slothql.cypher.CypherStatement.Gen):(CypherFragment.this.Statement,com.arkondata.slothql.cypher.CypherStatement.Gen)", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toCypherF", "tail" : ": GenF[Statement]", "member" : "com.arkondata.slothql.cypher.CypherFragment.toCypherF", "link" : "com\/arkondata\/slothql\/cypher\/CypherFragment.html#toCypherF:com.arkondata.slothql.cypher.CypherStatement.GenF[CypherFragment.this.Statement]", "kind" : "abstract val"}, {"member" : "com.arkondata.slothql.cypher.CypherFragment.Statement", "error" : "unsupported entity"}], "shortDescription" : ""}, {"name" : "com.arkondata.slothql.cypher.CypherStatement", "object" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html", "members_object" : [{"label" : "ToGenSIdOps", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherStatement.ToGenSIdOps", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#ToGenSIdOps[S<:com.arkondata.slothql.cypher.CypherStatement]extendsAnyRef", "kind" : "implicit class"}, {"label" : "ToGenSOps", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherStatement.ToGenSOps", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#ToGenSOps[C[_],S<:com.arkondata.slothql.cypher.CypherStatement]extendsAnyRef", "kind" : "implicit class"}, {"label" : "GenSPartOps", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherStatement.GenSPartOps", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#GenSPartOps[C[_]]extendsAnyRef", "kind" : "implicit class"}, {"label" : "GenS", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherStatement.GenS", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#GenS", "kind" : "object"}, {"label" : "GenS", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherStatement.GenS", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#GenS[S<:com.arkondata.slothql.cypher.CypherStatement]=com.arkondata.slothql.cypher.CypherStatement.GenS0[cats.Id,S]", "kind" : "type"}, {"label" : "GenS0", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherStatement.GenS0", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#GenS0", "kind" : "object"}, {"label" : "GenS0", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherStatement.GenS0", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#GenS0[C[_],S<:com.arkondata.slothql.cypher.CypherStatement]extendsAnyRef", "kind" : "final class"}, {"label" : "GenF", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherStatement.GenF", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#GenF", "kind" : "object"}, {"label" : "GenF", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherStatement.GenF", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#GenF[A]extendsAnyVal", "kind" : "final class"}, {"label" : "Gen", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherStatement.Gen", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#Gen", "kind" : "object"}, {"label" : "Gen", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherStatement.Gen", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#GenextendsAnyRef", "kind" : "abstract class"}, {"label" : "Param", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherStatement.Param", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#ParamextendsAnyRef", "kind" : "trait"}, {"label" : "Alias", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherStatement.Alias", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#Alias", "kind" : "object"}, {"label" : "Alias", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherStatement.Alias", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#AliasextendsAnyRef", "kind" : "trait"}, {"label" : "MkStatement", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherStatement.MkStatement", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#MkStatement", "kind" : "object"}, {"label" : "MkStatement", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherStatement.MkStatement", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#MkStatement[S]extendsAnyRef", "kind" : "trait"}, {"label" : "Complete", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherStatement.Complete", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#Complete[+T]extendsCypherStatementwithProductwithSerializable", "kind" : "final case class"}, {"label" : "Part", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherStatement.Part", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#PartextendsCypherStatementwithProductwithSerializable", "kind" : "final case class"}, {"label" : "LiftedValue", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherStatement.LiftedValue", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#LiftedValueextendsAnyRef", "kind" : "trait"}, {"label" : "LiftValue", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherStatement.LiftValue", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#LiftValue", "kind" : "object"}, {"label" : "LiftValue", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherStatement.LiftValue", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#LiftValue[A]extendsAnyRef", "kind" : "trait"}, {"label" : "Prepared", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherStatement.Prepared", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#Prepared[R]extendsProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html", "kind" : "trait", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherStatement) => Boolean, msg: => Any): CypherStatement", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherStatement) => Boolean): CypherStatement", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): CypherStatement", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CypherStatement", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CypherStatement, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CypherStatement, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "copy", "tail" : "(template: String, params: Map[String, LiftValue[_]]): CypherStatement.this.type", "member" : "com.arkondata.slothql.cypher.CypherStatement.copy", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#copy(template:String,params:Map[String,com.arkondata.slothql.cypher.CypherStatement.LiftValue[_]]):CypherStatement.this.type", "kind" : "abstract def"}, {"label" : "params", "tail" : ": Map[String, LiftValue[_]]", "member" : "com.arkondata.slothql.cypher.CypherStatement.params", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#params:Map[String,com.arkondata.slothql.cypher.CypherStatement.LiftValue[_]]", "kind" : "abstract val"}, {"label" : "template", "tail" : ": String", "member" : "com.arkondata.slothql.cypher.CypherStatement.template", "link" : "com\/arkondata\/slothql\/cypher\/CypherStatement.html#template:String", "kind" : "abstract val"}], "shortDescription" : ""}, {"name" : "com.arkondata.slothql.cypher.CypherTransactor", "object" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html", "members_object" : [{"label" : "Syntax", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherTransactor.Syntax", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#Syntax[F[_],Src,C[_]]extendsAnyRef", "kind" : "abstract class"}, {"label" : "SyntaxOps", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherTransactor.SyntaxOps", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#SyntaxOps[F[_],Src,C[_],A]extendsAnyRef", "kind" : "implicit final class"}, {"label" : "SyntaxTraverseOps", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherTransactor.SyntaxTraverseOps", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#SyntaxTraverseOps[F[_],Src,C[_],A]extendsAnyRef", "kind" : "implicit final class"}, {"label" : "SyntaxGatherOps", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherTransactor.SyntaxGatherOps", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#SyntaxGatherOps[F[_],Src,C[_],A]extendsAnyRef", "kind" : "implicit final class"}, {"label" : "zip3", "tail" : "(txA: Tx[F, Src, CC, A], txB: Tx[F, Src, CC, B], txC: Tx[F, Src, CC, C]): Tx[F, Src, CC, (A, B, C)]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.zip3", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#zip3[F[_],Src,CC[_],A,B,C](txA:com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,CC,A],txB:com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,CC,B],txC:com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,CC,C]):com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,CC,(A,B,C)]", "kind" : "def"}, {"label" : "zip", "tail" : "(txA: Tx[F, Src, C, A], txB: Tx[F, Src, C, B]): Tx[F, Src, C, (A, B)]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.zip", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#zip[F[_],Src,C[_],A,B](txA:com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,C,A],txB:com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,C,B]):com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,C,(A,B)]", "kind" : "def"}, {"label" : "product", "tail" : "(txA: Tx[F, Src, C, A], txB: Tx[F, Src, C, B])(S: Semigroupal[[δ$29$]FreeT[[γ$0$]Operation[Src, C, γ$0$], F, δ$29$]], I: Invariant[[δ$30$]FreeT[[γ$0$]Operation[Src, C, γ$0$], F, δ$30$]]): Tx[F, Src, C, (A, B)]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.product", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#product[F[_],Src,C[_],A,B](txA:com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,C,A],txB:com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,C,B])(implicitS:cats.Semigroupal[[δ$29$]cats.free.FreeT[[γ$0$]com.arkondata.slothql.cypher.CypherTransactor.Operation[Src,C,γ$0$],F,δ$29$]],implicitI:cats.Invariant[[δ$30$]cats.free.FreeT[[γ$0$]com.arkondata.slothql.cypher.CypherTransactor.Operation[Src,C,γ$0$],F,δ$30$]]):com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,C,(A,B)]", "kind" : "def"}, {"label" : "filtering", "tail" : "(tx: Tx[F, Src, C, A])(predTx: (A) => Tx[F, Src, C, Boolean])(arg0: Applicative[F], arg1: MonoidK[C]): Tx[F, Src, C, A]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.filtering", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#filtering[F[_],Src,C[_],A](tx:com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,C,A])(predTx:A=>com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,C,Boolean])(implicitevidence$22:cats.Applicative[F],implicitevidence$23:cats.MonoidK[C]):com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,C,A]", "kind" : "def"}, {"label" : "filter", "tail" : "(tx: Tx[F, Src, C, A])(pred: (A) => Boolean)(arg0: Applicative[F], arg1: MonoidK[C]): Tx[F, Src, C, A]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.filter", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#filter[F[_],Src,C[_],A](tx:com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,C,A])(pred:A=>Boolean)(implicitevidence$20:cats.Applicative[F],implicitevidence$21:cats.MonoidK[C]):com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,C,A]", "kind" : "def"}, {"label" : "traverseTx", "tail" : "(c: C[A])(tx: (A) => Tx[F, Src, C, B])(arg0: Applicative[F], arg1: Applicative[C], M: Monad[[δ$28$]FreeT[[γ$0$]Operation[Src, C, γ$0$], F, C[δ$28$]]]): Tx[F, Src, C, C[B]]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.traverseTx", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#traverseTx[F[_],Src,C[_],A,B](c:C[A])(tx:A=>com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,C,B])(implicitevidence$18:cats.Applicative[F],implicitevidence$19:cats.Applicative[C],implicitM:cats.Monad[[δ$28$]cats.free.FreeT[[γ$0$]com.arkondata.slothql.cypher.CypherTransactor.Operation[Src,C,γ$0$],F,C[δ$28$]]]):com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,C,C[B]]", "kind" : "def"}, {"label" : "flatTraverseTx", "tail" : "(c: C[A])(tx: (A) => Tx[F, Src, C, B])(arg0: Applicative[F], arg1: Functor[C]): Tx[F, Src, C, B]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.flatTraverseTx", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#flatTraverseTx[F[_],Src,C[_],A,B](c:C[A])(tx:A=>com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,C,B])(implicitevidence$16:cats.Applicative[F],implicitevidence$17:cats.Functor[C]):com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,C,B]", "kind" : "def"}, {"label" : "mapOpt", "tail" : "(tx: Tx[F, Src, C, A])(f: (A) => Option[B])(arg0: Applicative[F], arg1: MonoidK[C]): Tx[F, Src, C, B]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.mapOpt", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#mapOpt[F[_],Src,C[_],A,B](tx:com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,C,A])(f:A=>Option[B])(implicitevidence$14:cats.Applicative[F],implicitevidence$15:cats.MonoidK[C]):com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,C,B]", "kind" : "def"}, {"label" : "unwindTx", "tail" : "(arg0: Applicative[F]): ~>[[A]C[FreeT[[γ$0$]Operation[Src, C, γ$0$], F, A]], [δ$25$]FreeT[[γ$0$]Operation[Src, C, γ$0$], F, δ$25$]]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.unwindTx", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#unwindTx[F[_],Src,C[_]](implicitevidence$13:cats.Applicative[F]):[A]C[cats.free.FreeT[[γ$0$]com.arkondata.slothql.cypher.CypherTransactor.Operation[Src,C,γ$0$],F,A]]~>[δ$25$]cats.free.FreeT[[γ$0$]com.arkondata.slothql.cypher.CypherTransactor.Operation[Src,C,γ$0$],F,δ$25$]", "kind" : "def"}, {"label" : "liftTx", "tail" : "(arg0: Applicative[F]): ~>[[A]F[FreeT[[γ$0$]Operation[Src, C, γ$0$], F, A]], [δ$22$]FreeT[[γ$0$]Operation[Src, C, γ$0$], F, δ$22$]]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.liftTx", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#liftTx[F[_],Src,C[_]](implicitevidence$12:cats.Applicative[F]):[A]F[cats.free.FreeT[[γ$0$]com.arkondata.slothql.cypher.CypherTransactor.Operation[Src,C,γ$0$],F,A]]~>[δ$22$]cats.free.FreeT[[γ$0$]com.arkondata.slothql.cypher.CypherTransactor.Operation[Src,C,γ$0$],F,δ$22$]", "kind" : "def"}, {"label" : "error", "tail" : "(err: Err)(M: MonadError[F, Err]): Tx[F, Src, C, A]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.error", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#error[F[_],Err,Src,C[_],A](err:Err)(implicitM:cats.MonadError[F,Err]):com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,C,A]", "kind" : "def"}, {"label" : "liftF", "tail" : "(arg0: Applicative[F]): ~>[F, [δ$19$]FreeT[[γ$0$]Operation[Src, C, γ$0$], F, δ$19$]]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.liftF", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#liftF[F[_],Src,C[_]](implicitevidence$11:cats.Applicative[F]):F~>[δ$19$]cats.free.FreeT[[γ$0$]com.arkondata.slothql.cypher.CypherTransactor.Operation[Src,C,γ$0$],F,δ$19$]", "kind" : "def"}, {"label" : "const", "tail" : "(arg0: Applicative[F]): ~>[Id, [δ$16$]FreeT[[γ$0$]Operation[Src, C, γ$0$], F, δ$16$]]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.const", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#const[F[_],Src,C[_]](implicitevidence$10:cats.Applicative[F]):cats.Id~>[δ$16$]cats.free.FreeT[[γ$0$]com.arkondata.slothql.cypher.CypherTransactor.Operation[Src,C,γ$0$],F,δ$16$]", "kind" : "def"}, {"label" : "Reader", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherTransactor.Reader", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#Reader[Src,A]extendsAnyRef", "kind" : "trait"}, {"label" : "Unwind", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherTransactor.Unwind", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#Unwind[Src,C[_],R]extendsCypherTransactor.Operation[Src,C,R]withProductwithSerializable", "kind" : "case class"}, {"label" : "Gather", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherTransactor.Gather", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#Gather[Src,C[_],R]extendsCypherTransactor.Operation[Src,C,C[R]]withProductwithSerializable", "kind" : "case class"}, {"label" : "Query", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherTransactor.Query", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#Query[Src,C[_],R]extendsCypherTransactor.Operation[Src,C,R]withProductwithSerializable", "kind" : "case class"}, {"label" : "Operation", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherTransactor.Operation", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#Operation[Src,C[_],R]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "gather", "tail" : "(arg0: Applicative[F], arg1: Applicative[C], M: Monad[[δ$4$]FreeT[[γ$0$]Operation[Src, C, γ$0$], F, C[δ$4$]]]): ~>[[δ$5$]FreeT[[γ$0$]Operation[Src, C, γ$0$], F, δ$5$], [δ$6$]FreeT[[γ$0$]Operation[Src, C, γ$0$], F, C[δ$6$]]]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.gather", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#gather[F[_],Src,C[_]](implicitevidence$8:cats.Applicative[F],implicitevidence$9:cats.Applicative[C],implicitM:cats.Monad[[δ$4$]cats.free.FreeT[[γ$0$]com.arkondata.slothql.cypher.CypherTransactor.Operation[Src,C,γ$0$],F,C[δ$4$]]]):[δ$5$]cats.free.FreeT[[γ$0$]com.arkondata.slothql.cypher.CypherTransactor.Operation[Src,C,γ$0$],F,δ$5$]~>[δ$6$]cats.free.FreeT[[γ$0$]com.arkondata.slothql.cypher.CypherTransactor.Operation[Src,C,γ$0$],F,C[δ$6$]]", "kind" : "def"}, {"label" : "TxC", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherTransactor.TxC", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#TxC[F[_],Src,C[_],A]=com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,C,C[A]]", "kind" : "type"}, {"label" : "nothing", "tail" : "(arg0: Applicative[F], arg1: MonoidK[C]): Tx[F, Src, C, A]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.nothing", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#nothing[F[_],Src,C[_],A](implicitevidence$6:cats.Applicative[F],implicitevidence$7:cats.MonoidK[C]):com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,C,A]", "kind" : "def"}, {"label" : "unwind", "tail" : "(arg0: Applicative[F]): ~>[C, [δ$1$]FreeT[[γ$0$]Operation[Src, C, γ$0$], F, δ$1$]]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.unwind", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#unwind[F[_],Src,C[_]](implicitevidence$5:cats.Applicative[F]):C~>[δ$1$]cats.free.FreeT[[γ$0$]com.arkondata.slothql.cypher.CypherTransactor.Operation[Src,C,γ$0$],F,δ$1$]", "kind" : "def"}, {"label" : "query", "tail" : "(pcq: ParameterizedCypherQuery[Params, A])(arg0: Applicative[F], read: Reader[Src, A]): Apply[Params, A, Tx[F, Src, C, A]]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.query", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#query[F[_],Src,C[_],A,Params<:shapeless.HList](pcq:com.arkondata.slothql.cypher.ParameterizedCypherQuery[Params,A])(implicitevidence$4:cats.Applicative[F],implicitread:com.arkondata.slothql.cypher.CypherTransactor.Reader[Src,A]):com.arkondata.slothql.cypher.ParameterizedCypherQuery.Apply[Params,A,com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,C,A]]", "kind" : "def"}, {"label" : "query", "tail" : "(q: CypherFragment.Query[A])(arg0: Applicative[F], gen: Gen, read: Reader[Src, A]): Tx[F, Src, C, A]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.query", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#query[F[_],Src,C[_],A](q:com.arkondata.slothql.cypher.CypherFragment.Query[A])(implicitevidence$3:cats.Applicative[F],implicitgen:com.arkondata.slothql.cypher.CypherStatement.Gen,implicitread:com.arkondata.slothql.cypher.CypherTransactor.Reader[Src,A]):com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,C,A]", "kind" : "def"}, {"label" : "query", "tail" : "(s: Complete[A])(arg0: Applicative[F], read: Reader[Src, A]): Tx[F, Src, C, A]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.query", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#query[F[_],Src,C[_],A](s:com.arkondata.slothql.cypher.CypherStatement.Complete[A])(implicitevidence$2:cats.Applicative[F],implicitread:com.arkondata.slothql.cypher.CypherTransactor.Reader[Src,A]):com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,C,A]", "kind" : "def"}, {"label" : "query", "tail" : "(s: Prepared[A])(arg0: Applicative[F], read: Reader[Src, A]): Tx[F, Src, C, A]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.query", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#query[F[_],Src,C[_],A](s:com.arkondata.slothql.cypher.CypherStatement.Prepared[A])(implicitevidence$1:cats.Applicative[F],implicitread:com.arkondata.slothql.cypher.CypherTransactor.Reader[Src,A]):com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,C,A]", "kind" : "def"}, {"label" : "Tx", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherTransactor.Tx", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#Tx[F[_],Src,C[_],R]=cats.free.FreeT[[γ$0$]com.arkondata.slothql.cypher.CypherTransactor.Operation[Src,C,γ$0$],F,R]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html", "kind" : "trait", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherTransactor[F, Src, C]) => Boolean, msg: => Any): CypherTransactor[F, Src, C]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CypherTransactor[F, Src, C]) => Boolean): CypherTransactor[F, Src, C]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): CypherTransactor[F, Src, C]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CypherTransactor[F, Src, C]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CypherTransactor[F, Src, C], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CypherTransactor[F, Src, C], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "Tx", "tail" : "", "member" : "com.arkondata.slothql.cypher.CypherTransactor.Tx", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#Tx[R]=com.arkondata.slothql.cypher.CypherTransactor.Tx[F,Src,C,R]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "runWrite", "tail" : "(tx: Tx[A]): Out[A]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.runWrite", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#runWrite[A](tx:CypherTransactor.this.Tx[A]):CypherTransactor.this.Out[A]", "kind" : "abstract def"}, {"label" : "runRead", "tail" : "(tx: Tx[A]): Out[A]", "member" : "com.arkondata.slothql.cypher.CypherTransactor.runRead", "link" : "com\/arkondata\/slothql\/cypher\/CypherTransactor.html#runRead[A](tx:CypherTransactor.this.Tx[A]):CypherTransactor.this.Out[A]", "kind" : "abstract def"}, {"member" : "com.arkondata.slothql.cypher.CypherTransactor.Out", "error" : "unsupported entity"}], "shortDescription" : ""}, {"name" : "com.arkondata.slothql.cypher.GraphElem", "object" : "com\/arkondata\/slothql\/cypher\/GraphElem$.html", "members_object" : [{"label" : "Rel", "tail" : "", "member" : "com.arkondata.slothql.cypher.GraphElem.Rel", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem$.html#RelextendsGraphElemwithProductwithSerializable", "kind" : "final case class"}, {"label" : "Node", "tail" : "", "member" : "com.arkondata.slothql.cypher.GraphElem.Node", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem$.html#NodeextendsGraphElemwithProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/arkondata\/slothql\/cypher\/GraphElem.html", "kind" : "trait", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GraphElem) => Boolean, msg: => Any): GraphElem", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GraphElem) => Boolean): GraphElem", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): GraphElem", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): GraphElem", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (GraphElem, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (GraphElem, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/GraphElem.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.arkondata.slothql.cypher.GraphPath", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/GraphPath.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/GraphPath.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GraphPath) => Boolean, msg: => Any): GraphPath", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/GraphPath.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GraphPath) => Boolean): GraphPath", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/GraphPath.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): GraphPath", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/GraphPath.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): GraphPath", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/GraphPath.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (GraphPath, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/GraphPath.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (GraphPath, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/GraphPath.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.GraphPath#<init>", "error" : "unsupported entity"}, {"label" : "rels", "tail" : ": List[Rel]", "member" : "com.arkondata.slothql.cypher.GraphPath.rels", "link" : "com\/arkondata\/slothql\/cypher\/GraphPath.html#rels:List[com.arkondata.slothql.cypher.GraphElem.Rel]", "kind" : "val"}, {"label" : "nodes", "tail" : ": List[Node]", "member" : "com.arkondata.slothql.cypher.GraphPath.nodes", "link" : "com\/arkondata\/slothql\/cypher\/GraphPath.html#nodes:List[com.arkondata.slothql.cypher.GraphElem.Node]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/arkondata\/slothql\/cypher\/GraphPath.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/GraphPath.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/GraphPath.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/GraphPath.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/GraphPath.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/GraphPath.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/GraphPath.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/GraphPath.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/GraphPath.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/GraphPath.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/GraphPath.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/GraphPath.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/GraphPath.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/GraphPath.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/GraphPath.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/GraphPath.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/GraphPath.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/arkondata\/slothql\/cypher\/GraphPath.html", "kind" : "case class"}, {"name" : "com.arkondata.slothql.cypher.ParameterizedCypherQuery", "shortDescription" : "", "object" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ParameterizedCypherQuery[Params, T]) => Boolean, msg: => Any): ParameterizedCypherQuery[Params, T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ParameterizedCypherQuery[Params, T]) => Boolean): ParameterizedCypherQuery[Params, T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ParameterizedCypherQuery[Params, T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ParameterizedCypherQuery[Params, T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ParameterizedCypherQuery[Params, T], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ParameterizedCypherQuery[Params, T], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.arkondata.slothql.cypher.ParameterizedCypherQuery.toString", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(obj: Any): Boolean", "member" : "com.arkondata.slothql.cypher.ParameterizedCypherQuery.equals", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#equals(obj:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "com.arkondata.slothql.cypher.ParameterizedCypherQuery.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#hashCode():Int", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.ParameterizedCypherQuery#<init>", "error" : "unsupported entity"}, {"label" : "toMap", "tail" : ": Aux[Params, _ <: Symbol, _]", "member" : "com.arkondata.slothql.cypher.ParameterizedCypherQuery.toMap", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#toMap:shapeless.ops.record.ToMap.Aux[Params,_<:Symbol,_]", "kind" : "implicit val"}, {"label" : "gen", "tail" : ": Gen", "member" : "com.arkondata.slothql.cypher.ParameterizedCypherQuery.gen", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#gen:com.arkondata.slothql.cypher.CypherStatement.Gen", "kind" : "implicit val"}, {"label" : "query", "tail" : ": Query[T]", "member" : "com.arkondata.slothql.cypher.ParameterizedCypherQuery.query", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#query:com.arkondata.slothql.cypher.CypherFragment.Query[T]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Internal", "tail" : "", "member" : "com.arkondata.slothql.cypher.ParameterizedCypherQuery.Internal", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery$.html#Internal", "kind" : "object"}, {"label" : "ParameterizedCypherQueryToPreparedOps", "tail" : "", "member" : "com.arkondata.slothql.cypher.ParameterizedCypherQuery.ParameterizedCypherQueryToPreparedOps", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery$.html#ParameterizedCypherQueryToPreparedOps[Params<:shapeless.HList,T]extendsAnyRef", "kind" : "implicit class"}, {"label" : "Apply", "tail" : "", "member" : "com.arkondata.slothql.cypher.ParameterizedCypherQuery.Apply", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery$.html#Apply[Params<:shapeless.HList,T,Out]extendsRecordArgs", "kind" : "class"}, {"label" : "ManuallyBuilder", "tail" : "", "member" : "com.arkondata.slothql.cypher.ParameterizedCypherQuery.ManuallyBuilder", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery$.html#ManuallyBuilder[Params<:shapeless.HList]extendsAnyRef", "kind" : "class"}, {"label" : "manually", "tail" : "(): ManuallyBuilder[Params]", "member" : "com.arkondata.slothql.cypher.ParameterizedCypherQuery.manually", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery$.html#manually[Params<:shapeless.HList]:com.arkondata.slothql.cypher.ParameterizedCypherQuery.ManuallyBuilder[Params]", "kind" : "def"}, {"label" : "Build", "tail" : "", "member" : "com.arkondata.slothql.cypher.ParameterizedCypherQuery.Build", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery$.html#BuildextendsAnyRef", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherQuery.html", "kind" : "class"}, {"name" : "com.arkondata.slothql.cypher.ParameterizedCypherStatementMacros", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ParameterizedCypherStatementMacros) => Boolean, msg: => Any): ParameterizedCypherStatementMacros", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ParameterizedCypherStatementMacros) => Boolean): ParameterizedCypherStatementMacros", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ParameterizedCypherStatementMacros", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ParameterizedCypherStatementMacros", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ParameterizedCypherStatementMacros, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ParameterizedCypherStatementMacros, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "buildImpl", "tail" : "(f: scala.reflect.macros.Universe.Tree): scala.reflect.macros.Universe.Tree", "member" : "com.arkondata.slothql.cypher.ParameterizedCypherStatementMacros.buildImpl", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#buildImpl(f:ParameterizedCypherStatementMacros.this.c.universe.Tree):ParameterizedCypherStatementMacros.this.c.universe.Tree", "kind" : "def"}, {"member" : "com.arkondata.slothql.cypher.ParameterizedCypherStatementMacros#<init>", "error" : "unsupported entity"}, {"label" : "c", "tail" : ": Context", "member" : "com.arkondata.slothql.cypher.ParameterizedCypherStatementMacros.c", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#c:scala.reflect.macros.whitebox.Context", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/arkondata\/slothql\/cypher\/ParameterizedCypherStatementMacros.html", "kind" : "class"}], "com" : []};